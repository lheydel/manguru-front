// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`RegisterContent component should render itself and children 1`] = `
<Provider
  store={
    Object {
      "clearActions": [Function],
      "dispatch": [Function],
      "getActions": [Function],
      "getState": [Function],
      "replaceReducer": [Function],
      "subscribe": [Function],
    }
  }
>
  <Connect(RawRegisterContent)>
    <RawRegisterContent
      dispatch={[Function]}
      registerErr="blblbl"
    >
      <WithStyles(ForwardRef(Container))
        maxWidth="sm"
      >
        <ForwardRef(Container)
          classes={
            Object {
              "fixed": "MuiContainer-fixed",
              "maxWidthLg": "MuiContainer-maxWidthLg",
              "maxWidthMd": "MuiContainer-maxWidthMd",
              "maxWidthSm": "MuiContainer-maxWidthSm",
              "maxWidthXl": "MuiContainer-maxWidthXl",
              "maxWidthXs": "MuiContainer-maxWidthXs",
              "root": "MuiContainer-root",
            }
          }
          maxWidth="sm"
        >
          <div
            className="MuiContainer-root MuiContainer-maxWidthSm"
          >
            <WithStyles(ForwardRef(Card))
              elevation={2}
            >
              <ForwardRef(Card)
                classes={
                  Object {
                    "root": "MuiCard-root",
                  }
                }
                elevation={2}
              >
                <WithStyles(ForwardRef(Paper))
                  className="MuiCard-root"
                  elevation={2}
                >
                  <ForwardRef(Paper)
                    className="MuiCard-root"
                    classes={
                      Object {
                        "elevation0": "MuiPaper-elevation0",
                        "elevation1": "MuiPaper-elevation1",
                        "elevation10": "MuiPaper-elevation10",
                        "elevation11": "MuiPaper-elevation11",
                        "elevation12": "MuiPaper-elevation12",
                        "elevation13": "MuiPaper-elevation13",
                        "elevation14": "MuiPaper-elevation14",
                        "elevation15": "MuiPaper-elevation15",
                        "elevation16": "MuiPaper-elevation16",
                        "elevation17": "MuiPaper-elevation17",
                        "elevation18": "MuiPaper-elevation18",
                        "elevation19": "MuiPaper-elevation19",
                        "elevation2": "MuiPaper-elevation2",
                        "elevation20": "MuiPaper-elevation20",
                        "elevation21": "MuiPaper-elevation21",
                        "elevation22": "MuiPaper-elevation22",
                        "elevation23": "MuiPaper-elevation23",
                        "elevation24": "MuiPaper-elevation24",
                        "elevation3": "MuiPaper-elevation3",
                        "elevation4": "MuiPaper-elevation4",
                        "elevation5": "MuiPaper-elevation5",
                        "elevation6": "MuiPaper-elevation6",
                        "elevation7": "MuiPaper-elevation7",
                        "elevation8": "MuiPaper-elevation8",
                        "elevation9": "MuiPaper-elevation9",
                        "root": "MuiPaper-root",
                        "rounded": "MuiPaper-rounded",
                      }
                    }
                    elevation={2}
                  >
                    <div
                      className="MuiPaper-root MuiPaper-elevation2 MuiCard-root MuiPaper-rounded"
                    >
                      <WithStyles(ForwardRef(CardHeader))
                        style={
                          Object {
                            "textAlign": "center",
                          }
                        }
                        title="Register"
                      >
                        <ForwardRef(CardHeader)
                          classes={
                            Object {
                              "action": "MuiCardHeader-action",
                              "avatar": "MuiCardHeader-avatar",
                              "content": "MuiCardHeader-content",
                              "root": "MuiCardHeader-root",
                              "subheader": "MuiCardHeader-subheader",
                              "title": "MuiCardHeader-title",
                            }
                          }
                          style={
                            Object {
                              "textAlign": "center",
                            }
                          }
                          title="Register"
                        >
                          <div
                            className="MuiCardHeader-root"
                            style={
                              Object {
                                "textAlign": "center",
                              }
                            }
                          >
                            <div
                              className="MuiCardHeader-content"
                            >
                              <WithStyles(ForwardRef(Typography))
                                className="MuiCardHeader-title"
                                component="span"
                                display="block"
                                variant="h5"
                              >
                                <ForwardRef(Typography)
                                  className="MuiCardHeader-title"
                                  classes={
                                    Object {
                                      "alignCenter": "MuiTypography-alignCenter",
                                      "alignJustify": "MuiTypography-alignJustify",
                                      "alignLeft": "MuiTypography-alignLeft",
                                      "alignRight": "MuiTypography-alignRight",
                                      "body1": "MuiTypography-body1",
                                      "body2": "MuiTypography-body2",
                                      "button": "MuiTypography-button",
                                      "caption": "MuiTypography-caption",
                                      "colorError": "MuiTypography-colorError",
                                      "colorInherit": "MuiTypography-colorInherit",
                                      "colorPrimary": "MuiTypography-colorPrimary",
                                      "colorSecondary": "MuiTypography-colorSecondary",
                                      "colorTextPrimary": "MuiTypography-colorTextPrimary",
                                      "colorTextSecondary": "MuiTypography-colorTextSecondary",
                                      "displayBlock": "MuiTypography-displayBlock",
                                      "displayInline": "MuiTypography-displayInline",
                                      "gutterBottom": "MuiTypography-gutterBottom",
                                      "h1": "MuiTypography-h1",
                                      "h2": "MuiTypography-h2",
                                      "h3": "MuiTypography-h3",
                                      "h4": "MuiTypography-h4",
                                      "h5": "MuiTypography-h5",
                                      "h6": "MuiTypography-h6",
                                      "noWrap": "MuiTypography-noWrap",
                                      "overline": "MuiTypography-overline",
                                      "paragraph": "MuiTypography-paragraph",
                                      "root": "MuiTypography-root",
                                      "srOnly": "MuiTypography-srOnly",
                                      "subtitle1": "MuiTypography-subtitle1",
                                      "subtitle2": "MuiTypography-subtitle2",
                                    }
                                  }
                                  component="span"
                                  display="block"
                                  theme={
                                    Object {
                                      "breakpoints": Object {
                                        "between": [Function],
                                        "down": [Function],
                                        "keys": Array [
                                          "xs",
                                          "sm",
                                          "md",
                                          "lg",
                                          "xl",
                                        ],
                                        "only": [Function],
                                        "up": [Function],
                                        "values": Object {
                                          "lg": 1280,
                                          "md": 960,
                                          "sm": 600,
                                          "xl": 1920,
                                          "xs": 0,
                                        },
                                        "width": [Function],
                                      },
                                      "direction": "ltr",
                                      "mixins": Object {
                                        "gutters": [Function],
                                        "toolbar": Object {
                                          "@media (min-width:0px) and (orientation: landscape)": Object {
                                            "minHeight": 48,
                                          },
                                          "@media (min-width:600px)": Object {
                                            "minHeight": 64,
                                          },
                                          "minHeight": 56,
                                        },
                                      },
                                      "overrides": Object {},
                                      "palette": Object {
                                        "action": Object {
                                          "active": "rgba(0, 0, 0, 0.54)",
                                          "disabled": "rgba(0, 0, 0, 0.26)",
                                          "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                          "hover": "rgba(0, 0, 0, 0.08)",
                                          "hoverOpacity": 0.08,
                                          "selected": "rgba(0, 0, 0, 0.14)",
                                        },
                                        "augmentColor": [Function],
                                        "background": Object {
                                          "default": "#fafafa",
                                          "paper": "#fff",
                                        },
                                        "common": Object {
                                          "black": "#000",
                                          "white": "#fff",
                                        },
                                        "contrastThreshold": 3,
                                        "divider": "rgba(0, 0, 0, 0.12)",
                                        "error": Object {
                                          "contrastText": "#fff",
                                          "dark": "#d32f2f",
                                          "light": "#e57373",
                                          "main": "#f44336",
                                        },
                                        "getContrastText": [Function],
                                        "grey": Object {
                                          "100": "#f5f5f5",
                                          "200": "#eeeeee",
                                          "300": "#e0e0e0",
                                          "400": "#bdbdbd",
                                          "50": "#fafafa",
                                          "500": "#9e9e9e",
                                          "600": "#757575",
                                          "700": "#616161",
                                          "800": "#424242",
                                          "900": "#212121",
                                          "A100": "#d5d5d5",
                                          "A200": "#aaaaaa",
                                          "A400": "#303030",
                                          "A700": "#616161",
                                        },
                                        "primary": Object {
                                          "contrastText": "#fff",
                                          "dark": "#303f9f",
                                          "light": "#7986cb",
                                          "main": "#3f51b5",
                                        },
                                        "secondary": Object {
                                          "contrastText": "#fff",
                                          "dark": "#c51162",
                                          "light": "#ff4081",
                                          "main": "#f50057",
                                        },
                                        "text": Object {
                                          "disabled": "rgba(0, 0, 0, 0.38)",
                                          "hint": "rgba(0, 0, 0, 0.38)",
                                          "primary": "rgba(0, 0, 0, 0.87)",
                                          "secondary": "rgba(0, 0, 0, 0.54)",
                                        },
                                        "tonalOffset": 0.2,
                                        "type": "light",
                                      },
                                      "props": Object {},
                                      "shadows": Array [
                                        "none",
                                        "0px 1px 3px 0px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 2px 1px -1px rgba(0,0,0,0.12)",
                                        "0px 1px 5px 0px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 3px 1px -2px rgba(0,0,0,0.12)",
                                        "0px 1px 8px 0px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 3px 3px -2px rgba(0,0,0,0.12)",
                                        "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                        "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                        "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                        "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                        "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                        "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                        "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                        "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                        "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                        "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                        "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                        "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                        "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                        "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                        "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                        "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                        "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                        "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                        "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                        "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                        "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                      ],
                                      "shape": Object {
                                        "borderRadius": 4,
                                      },
                                      "spacing": [Function],
                                      "transitions": Object {
                                        "create": [Function],
                                        "duration": Object {
                                          "complex": 375,
                                          "enteringScreen": 225,
                                          "leavingScreen": 195,
                                          "short": 250,
                                          "shorter": 200,
                                          "shortest": 150,
                                          "standard": 300,
                                        },
                                        "easing": Object {
                                          "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                          "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                          "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                          "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                        },
                                        "getAutoHeightDuration": [Function],
                                      },
                                      "typography": Object {
                                        "body1": Object {
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": "1rem",
                                          "fontWeight": 400,
                                          "letterSpacing": "0.00938em",
                                          "lineHeight": 1.5,
                                        },
                                        "body2": Object {
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": "0.875rem",
                                          "fontWeight": 400,
                                          "letterSpacing": "0.01071em",
                                          "lineHeight": 1.43,
                                        },
                                        "button": Object {
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": "0.875rem",
                                          "fontWeight": 500,
                                          "letterSpacing": "0.02857em",
                                          "lineHeight": 1.75,
                                          "textTransform": "uppercase",
                                        },
                                        "caption": Object {
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": "0.75rem",
                                          "fontWeight": 400,
                                          "letterSpacing": "0.03333em",
                                          "lineHeight": 1.66,
                                        },
                                        "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                        "fontSize": 14,
                                        "fontWeightBold": 700,
                                        "fontWeightLight": 300,
                                        "fontWeightMedium": 500,
                                        "fontWeightRegular": 400,
                                        "h1": Object {
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": "6rem",
                                          "fontWeight": 300,
                                          "letterSpacing": "-0.01562em",
                                          "lineHeight": 1,
                                        },
                                        "h2": Object {
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": "3.75rem",
                                          "fontWeight": 300,
                                          "letterSpacing": "-0.00833em",
                                          "lineHeight": 1,
                                        },
                                        "h3": Object {
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": "3rem",
                                          "fontWeight": 400,
                                          "letterSpacing": "0em",
                                          "lineHeight": 1.04,
                                        },
                                        "h4": Object {
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": "2.125rem",
                                          "fontWeight": 400,
                                          "letterSpacing": "0.00735em",
                                          "lineHeight": 1.17,
                                        },
                                        "h5": Object {
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": "1.5rem",
                                          "fontWeight": 400,
                                          "letterSpacing": "0em",
                                          "lineHeight": 1.33,
                                        },
                                        "h6": Object {
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": "1.25rem",
                                          "fontWeight": 500,
                                          "letterSpacing": "0.0075em",
                                          "lineHeight": 1.6,
                                        },
                                        "htmlFontSize": 16,
                                        "overline": Object {
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": "0.75rem",
                                          "fontWeight": 400,
                                          "letterSpacing": "0.08333em",
                                          "lineHeight": 2.66,
                                          "textTransform": "uppercase",
                                        },
                                        "pxToRem": [Function],
                                        "round": [Function],
                                        "subtitle1": Object {
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": "1rem",
                                          "fontWeight": 400,
                                          "letterSpacing": "0.00938em",
                                          "lineHeight": 1.75,
                                        },
                                        "subtitle2": Object {
                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                          "fontSize": "0.875rem",
                                          "fontWeight": 500,
                                          "letterSpacing": "0.00714em",
                                          "lineHeight": 1.57,
                                        },
                                      },
                                      "zIndex": Object {
                                        "appBar": 1100,
                                        "drawer": 1200,
                                        "mobileStepper": 1000,
                                        "modal": 1300,
                                        "snackbar": 1400,
                                        "tooltip": 1500,
                                      },
                                    }
                                  }
                                  variant="h5"
                                >
                                  <span
                                    className="MuiTypography-root MuiCardHeader-title MuiTypography-h5 MuiTypography-displayBlock"
                                  >
                                    Register
                                  </span>
                                </ForwardRef(Typography)>
                              </WithStyles(ForwardRef(Typography))>
                            </div>
                          </div>
                        </ForwardRef(CardHeader)>
                      </WithStyles(ForwardRef(CardHeader))>
                      <WithStyles(ForwardRef(CardContent))>
                        <ForwardRef(CardContent)
                          classes={
                            Object {
                              "root": "MuiCardContent-root",
                            }
                          }
                        >
                          <div
                            className="MuiCardContent-root"
                          >
                            <Alert
                              mb={2}
                              variant="danger"
                            >
                              <Styled(MuiBox)
                                border={1}
                                className="makeStyles-danger-73"
                                mb={2}
                              >
                                <div
                                  className="MuiBox-root MuiBox-root-75 makeStyles-danger-73"
                                >
                                  <i>
                                    blblbl
                                  </i>
                                </div>
                              </Styled(MuiBox)>
                            </Alert>
                            <Connect(RawRegisterForm)>
                              <RawRegisterForm
                                register={[Function]}
                              >
                                <Formik
                                  enableReinitialize={false}
                                  initialValues={
                                    Object {
                                      "email": "",
                                      "password": "",
                                      "passwordConfirm": "",
                                      "username": "",
                                    }
                                  }
                                  isInitialValid={false}
                                  onSubmit={[Function]}
                                  render={[Function]}
                                  validateOnBlur={true}
                                  validateOnChange={true}
                                  validationSchema={
                                    ObjectSchema {
                                      "_blacklist": RefSet {
                                        "list": Set {},
                                        "refs": Map {},
                                      },
                                      "_conditions": Array [],
                                      "_defaultDefault": [Function],
                                      "_deps": Array [],
                                      "_excludedEdges": Array [],
                                      "_exclusive": Object {},
                                      "_mutate": undefined,
                                      "_nodes": Array [
                                        "passwordConfirm",
                                        "password",
                                        "username",
                                        "email",
                                      ],
                                      "_options": Object {
                                        "abortEarly": true,
                                        "recursive": true,
                                      },
                                      "_type": "object",
                                      "_typeError": [Function],
                                      "_whitelist": RefSet {
                                        "list": Set {},
                                        "refs": Map {},
                                      },
                                      "fields": Object {
                                        "email": StringSchema {
                                          "_blacklist": RefSet {
                                            "list": Set {},
                                            "refs": Map {},
                                          },
                                          "_conditions": Array [],
                                          "_deps": Array [],
                                          "_exclusive": Object {
                                            "max": true,
                                            "required": true,
                                            "trim": false,
                                            "undefined": false,
                                          },
                                          "_mutate": undefined,
                                          "_options": Object {
                                            "abortEarly": true,
                                            "recursive": true,
                                          },
                                          "_type": "string",
                                          "_typeError": [Function],
                                          "_whitelist": RefSet {
                                            "list": Set {},
                                            "refs": Map {},
                                          },
                                          "tests": Array [
                                            [Function],
                                            [Function],
                                            [Function],
                                            [Function],
                                          ],
                                          "transforms": Array [
                                            [Function],
                                            [Function],
                                          ],
                                        },
                                        "password": StringSchema {
                                          "_blacklist": RefSet {
                                            "list": Set {},
                                            "refs": Map {},
                                          },
                                          "_conditions": Array [],
                                          "_deps": Array [],
                                          "_exclusive": Object {
                                            "max": true,
                                            "min": true,
                                            "required": true,
                                          },
                                          "_mutate": undefined,
                                          "_options": Object {
                                            "abortEarly": true,
                                            "recursive": true,
                                          },
                                          "_type": "string",
                                          "_typeError": [Function],
                                          "_whitelist": RefSet {
                                            "list": Set {},
                                            "refs": Map {},
                                          },
                                          "tests": Array [
                                            [Function],
                                            [Function],
                                            [Function],
                                          ],
                                          "transforms": Array [
                                            [Function],
                                          ],
                                        },
                                        "passwordConfirm": StringSchema {
                                          "_blacklist": RefSet {
                                            "list": Set {},
                                            "refs": Map {},
                                          },
                                          "_conditions": Array [],
                                          "_deps": Array [],
                                          "_exclusive": Object {
                                            "required": true,
                                          },
                                          "_mutate": undefined,
                                          "_options": Object {
                                            "abortEarly": true,
                                            "recursive": true,
                                          },
                                          "_type": "string",
                                          "_typeError": [Function],
                                          "_whitelist": RefSet {
                                            "list": Set {},
                                            "refs": Map {
                                              "password" => Reference {
                                                "getter": [Function],
                                                "isContext": false,
                                                "isSibling": true,
                                                "isValue": false,
                                                "key": "password",
                                                "map": undefined,
                                                "path": "password",
                                              },
                                            },
                                          },
                                          "_whitelistError": [Function],
                                          "tests": Array [
                                            [Function],
                                          ],
                                          "transforms": Array [
                                            [Function],
                                          ],
                                        },
                                        "username": StringSchema {
                                          "_blacklist": RefSet {
                                            "list": Set {},
                                            "refs": Map {},
                                          },
                                          "_conditions": Array [],
                                          "_deps": Array [],
                                          "_exclusive": Object {
                                            "max": true,
                                            "min": true,
                                            "required": true,
                                            "trim": false,
                                          },
                                          "_mutate": undefined,
                                          "_options": Object {
                                            "abortEarly": true,
                                            "recursive": true,
                                          },
                                          "_type": "string",
                                          "_typeError": [Function],
                                          "_whitelist": RefSet {
                                            "list": Set {},
                                            "refs": Map {},
                                          },
                                          "tests": Array [
                                            [Function],
                                            [Function],
                                            [Function],
                                            [Function],
                                          ],
                                          "transforms": Array [
                                            [Function],
                                            [Function],
                                          ],
                                        },
                                      },
                                      "tests": Array [],
                                      "transforms": Array [
                                        [Function],
                                      ],
                                    }
                                  }
                                >
                                  <Form
                                    noValidate={true}
                                  >
                                    <Component
                                      formik={
                                        Object {
                                          "dirty": false,
                                          "errors": Object {},
                                          "handleBlur": [Function],
                                          "handleChange": [Function],
                                          "handleReset": [Function],
                                          "handleSubmit": [Function],
                                          "initialValues": Object {
                                            "email": "",
                                            "password": "",
                                            "passwordConfirm": "",
                                            "username": "",
                                          },
                                          "isSubmitting": false,
                                          "isValid": false,
                                          "isValidating": false,
                                          "registerField": [Function],
                                          "resetForm": [Function],
                                          "setError": [Function],
                                          "setErrors": [Function],
                                          "setFieldError": [Function],
                                          "setFieldTouched": [Function],
                                          "setFieldValue": [Function],
                                          "setFormikState": [Function],
                                          "setStatus": [Function],
                                          "setSubmitting": [Function],
                                          "setTouched": [Function],
                                          "setValues": [Function],
                                          "status": undefined,
                                          "submitCount": 0,
                                          "submitForm": [Function],
                                          "touched": Object {},
                                          "unregisterField": [Function],
                                          "validate": undefined,
                                          "validateField": [Function],
                                          "validateForm": [Function],
                                          "validateOnBlur": true,
                                          "validateOnChange": true,
                                          "validationSchema": ObjectSchema {
                                            "_blacklist": RefSet {
                                              "list": Set {},
                                              "refs": Map {},
                                            },
                                            "_conditions": Array [],
                                            "_defaultDefault": [Function],
                                            "_deps": Array [],
                                            "_excludedEdges": Array [],
                                            "_exclusive": Object {},
                                            "_mutate": undefined,
                                            "_nodes": Array [
                                              "passwordConfirm",
                                              "password",
                                              "username",
                                              "email",
                                            ],
                                            "_options": Object {
                                              "abortEarly": true,
                                              "recursive": true,
                                            },
                                            "_type": "object",
                                            "_typeError": [Function],
                                            "_whitelist": RefSet {
                                              "list": Set {},
                                              "refs": Map {},
                                            },
                                            "fields": Object {
                                              "email": StringSchema {
                                                "_blacklist": RefSet {
                                                  "list": Set {},
                                                  "refs": Map {},
                                                },
                                                "_conditions": Array [],
                                                "_deps": Array [],
                                                "_exclusive": Object {
                                                  "max": true,
                                                  "required": true,
                                                  "trim": false,
                                                  "undefined": false,
                                                },
                                                "_mutate": undefined,
                                                "_options": Object {
                                                  "abortEarly": true,
                                                  "recursive": true,
                                                },
                                                "_type": "string",
                                                "_typeError": [Function],
                                                "_whitelist": RefSet {
                                                  "list": Set {},
                                                  "refs": Map {},
                                                },
                                                "tests": Array [
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                ],
                                                "transforms": Array [
                                                  [Function],
                                                  [Function],
                                                ],
                                              },
                                              "password": StringSchema {
                                                "_blacklist": RefSet {
                                                  "list": Set {},
                                                  "refs": Map {},
                                                },
                                                "_conditions": Array [],
                                                "_deps": Array [],
                                                "_exclusive": Object {
                                                  "max": true,
                                                  "min": true,
                                                  "required": true,
                                                },
                                                "_mutate": undefined,
                                                "_options": Object {
                                                  "abortEarly": true,
                                                  "recursive": true,
                                                },
                                                "_type": "string",
                                                "_typeError": [Function],
                                                "_whitelist": RefSet {
                                                  "list": Set {},
                                                  "refs": Map {},
                                                },
                                                "tests": Array [
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                ],
                                                "transforms": Array [
                                                  [Function],
                                                ],
                                              },
                                              "passwordConfirm": StringSchema {
                                                "_blacklist": RefSet {
                                                  "list": Set {},
                                                  "refs": Map {},
                                                },
                                                "_conditions": Array [],
                                                "_deps": Array [],
                                                "_exclusive": Object {
                                                  "required": true,
                                                },
                                                "_mutate": undefined,
                                                "_options": Object {
                                                  "abortEarly": true,
                                                  "recursive": true,
                                                },
                                                "_type": "string",
                                                "_typeError": [Function],
                                                "_whitelist": RefSet {
                                                  "list": Set {},
                                                  "refs": Map {
                                                    "password" => Reference {
                                                      "getter": [Function],
                                                      "isContext": false,
                                                      "isSibling": true,
                                                      "isValue": false,
                                                      "key": "password",
                                                      "map": undefined,
                                                      "path": "password",
                                                    },
                                                  },
                                                },
                                                "_whitelistError": [Function],
                                                "tests": Array [
                                                  [Function],
                                                ],
                                                "transforms": Array [
                                                  [Function],
                                                ],
                                              },
                                              "username": StringSchema {
                                                "_blacklist": RefSet {
                                                  "list": Set {},
                                                  "refs": Map {},
                                                },
                                                "_conditions": Array [],
                                                "_deps": Array [],
                                                "_exclusive": Object {
                                                  "max": true,
                                                  "min": true,
                                                  "required": true,
                                                  "trim": false,
                                                },
                                                "_mutate": undefined,
                                                "_options": Object {
                                                  "abortEarly": true,
                                                  "recursive": true,
                                                },
                                                "_type": "string",
                                                "_typeError": [Function],
                                                "_whitelist": RefSet {
                                                  "list": Set {},
                                                  "refs": Map {},
                                                },
                                                "tests": Array [
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                  [Function],
                                                ],
                                                "transforms": Array [
                                                  [Function],
                                                  [Function],
                                                ],
                                              },
                                            },
                                            "tests": Array [],
                                            "transforms": Array [
                                              [Function],
                                            ],
                                          },
                                          "values": Object {
                                            "email": "",
                                            "password": "",
                                            "passwordConfirm": "",
                                            "username": "",
                                          },
                                        }
                                      }
                                      noValidate={true}
                                    >
                                      <form
                                        noValidate={true}
                                        onReset={[Function]}
                                        onSubmit={[Function]}
                                      >
                                         
                                        <Styled(MuiBox)
                                          mb={2}
                                        >
                                          <div
                                            className="MuiBox-root MuiBox-root-76"
                                          >
                                            <Field
                                              fieldType="text"
                                              formikProps={
                                                Object {
                                                  "dirty": false,
                                                  "errors": Object {},
                                                  "handleBlur": [Function],
                                                  "handleChange": [Function],
                                                  "handleReset": [Function],
                                                  "handleSubmit": [Function],
                                                  "initialValues": Object {
                                                    "email": "",
                                                    "password": "",
                                                    "passwordConfirm": "",
                                                    "username": "",
                                                  },
                                                  "isSubmitting": false,
                                                  "isValid": false,
                                                  "isValidating": false,
                                                  "registerField": [Function],
                                                  "resetForm": [Function],
                                                  "setError": [Function],
                                                  "setErrors": [Function],
                                                  "setFieldError": [Function],
                                                  "setFieldTouched": [Function],
                                                  "setFieldValue": [Function],
                                                  "setFormikState": [Function],
                                                  "setStatus": [Function],
                                                  "setSubmitting": [Function],
                                                  "setTouched": [Function],
                                                  "setValues": [Function],
                                                  "status": undefined,
                                                  "submitCount": 0,
                                                  "submitForm": [Function],
                                                  "touched": Object {},
                                                  "unregisterField": [Function],
                                                  "validateField": [Function],
                                                  "validateForm": [Function],
                                                  "validateOnBlur": true,
                                                  "validateOnChange": true,
                                                  "values": Object {
                                                    "email": "",
                                                    "password": "",
                                                    "passwordConfirm": "",
                                                    "username": "",
                                                  },
                                                }
                                              }
                                              fullWidth={true}
                                              label="Email"
                                              name="email"
                                              type="email"
                                              variant="outlined"
                                            >
                                              <TextField
                                                errors={Object {}}
                                                fullWidth={true}
                                                handleBlur={[Function]}
                                                handleChange={[Function]}
                                                label="Email"
                                                name="email"
                                                touched={Object {}}
                                                type="email"
                                                values={
                                                  Object {
                                                    "email": "",
                                                    "password": "",
                                                    "passwordConfirm": "",
                                                    "username": "",
                                                  }
                                                }
                                                variant="outlined"
                                              >
                                                <WithStyles(ForwardRef(TextField))
                                                  error={false}
                                                  fullWidth={true}
                                                  label="Email"
                                                  name="email"
                                                  onBlur={[Function]}
                                                  onChange={[Function]}
                                                  type="email"
                                                  value=""
                                                  variant="outlined"
                                                >
                                                  <ForwardRef(TextField)
                                                    classes={
                                                      Object {
                                                        "root": "MuiTextField-root",
                                                      }
                                                    }
                                                    error={false}
                                                    fullWidth={true}
                                                    label="Email"
                                                    name="email"
                                                    onBlur={[Function]}
                                                    onChange={[Function]}
                                                    type="email"
                                                    value=""
                                                    variant="outlined"
                                                  >
                                                    <WithStyles(ForwardRef(FormControl))
                                                      className="MuiTextField-root"
                                                      error={false}
                                                      fullWidth={true}
                                                      required={false}
                                                      variant="outlined"
                                                    >
                                                      <ForwardRef(FormControl)
                                                        className="MuiTextField-root"
                                                        classes={
                                                          Object {
                                                            "fullWidth": "MuiFormControl-fullWidth",
                                                            "marginDense": "MuiFormControl-marginDense",
                                                            "marginNormal": "MuiFormControl-marginNormal",
                                                            "root": "MuiFormControl-root",
                                                          }
                                                        }
                                                        error={false}
                                                        fullWidth={true}
                                                        required={false}
                                                        variant="outlined"
                                                      >
                                                        <div
                                                          className="MuiFormControl-root MuiTextField-root MuiFormControl-fullWidth"
                                                        >
                                                          <WithStyles(ForwardRef(InputLabel))>
                                                            <ForwardRef(InputLabel)
                                                              classes={
                                                                Object {
                                                                  "animated": "MuiInputLabel-animated",
                                                                  "asterisk": "MuiInputLabel-asterisk",
                                                                  "disabled": "Mui-disabled",
                                                                  "error": "Mui-error",
                                                                  "filled": "MuiInputLabel-filled",
                                                                  "focused": "Mui-focused",
                                                                  "formControl": "MuiInputLabel-formControl",
                                                                  "marginDense": "MuiInputLabel-marginDense",
                                                                  "outlined": "MuiInputLabel-outlined",
                                                                  "required": "Mui-required",
                                                                  "root": "MuiInputLabel-root",
                                                                  "shrink": "MuiInputLabel-shrink",
                                                                }
                                                              }
                                                            >
                                                              <WithStyles(ForwardRef(FormLabel))
                                                                className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined"
                                                                classes={
                                                                  Object {
                                                                    "asterisk": "MuiInputLabel-asterisk",
                                                                    "disabled": "Mui-disabled",
                                                                    "error": "Mui-error",
                                                                    "focused": "Mui-focused",
                                                                    "required": "Mui-required",
                                                                  }
                                                                }
                                                                data-shrink={false}
                                                              >
                                                                <ForwardRef(FormLabel)
                                                                  className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined"
                                                                  classes={
                                                                    Object {
                                                                      "asterisk": "MuiFormLabel-asterisk MuiInputLabel-asterisk",
                                                                      "disabled": "Mui-disabled Mui-disabled",
                                                                      "error": "Mui-error Mui-error",
                                                                      "filled": "MuiFormLabel-filled",
                                                                      "focused": "Mui-focused Mui-focused",
                                                                      "required": "Mui-required Mui-required",
                                                                      "root": "MuiFormLabel-root",
                                                                    }
                                                                  }
                                                                  data-shrink={false}
                                                                >
                                                                  <label
                                                                    className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined"
                                                                    data-shrink={false}
                                                                  >
                                                                    Email
                                                                  </label>
                                                                </ForwardRef(FormLabel)>
                                                              </WithStyles(ForwardRef(FormLabel))>
                                                            </ForwardRef(InputLabel)>
                                                          </WithStyles(ForwardRef(InputLabel))>
                                                          <WithStyles(ForwardRef(OutlinedInput))
                                                            fullWidth={true}
                                                            labelWidth={0}
                                                            name="email"
                                                            onBlur={[Function]}
                                                            onChange={[Function]}
                                                            type="email"
                                                            value=""
                                                          >
                                                            <ForwardRef(OutlinedInput)
                                                              classes={
                                                                Object {
                                                                  "adornedEnd": "MuiOutlinedInput-adornedEnd",
                                                                  "adornedStart": "MuiOutlinedInput-adornedStart",
                                                                  "disabled": "Mui-disabled",
                                                                  "error": "Mui-error",
                                                                  "focused": "Mui-focused",
                                                                  "input": "MuiOutlinedInput-input",
                                                                  "inputAdornedEnd": "MuiOutlinedInput-inputAdornedEnd",
                                                                  "inputAdornedStart": "MuiOutlinedInput-inputAdornedStart",
                                                                  "inputMarginDense": "MuiOutlinedInput-inputMarginDense",
                                                                  "inputMultiline": "MuiOutlinedInput-inputMultiline",
                                                                  "inputSelect": "MuiOutlinedInput-inputSelect",
                                                                  "marginDense": "MuiOutlinedInput-marginDense",
                                                                  "multiline": "MuiOutlinedInput-multiline",
                                                                  "notchedOutline": "MuiOutlinedInput-notchedOutline",
                                                                  "root": "MuiOutlinedInput-root",
                                                                }
                                                              }
                                                              fullWidth={true}
                                                              labelWidth={0}
                                                              name="email"
                                                              onBlur={[Function]}
                                                              onChange={[Function]}
                                                              type="email"
                                                              value=""
                                                            >
                                                              <WithStyles(ForwardRef(InputBase))
                                                                classes={
                                                                  Object {
                                                                    "adornedEnd": "MuiOutlinedInput-adornedEnd",
                                                                    "adornedStart": "MuiOutlinedInput-adornedStart",
                                                                    "disabled": "Mui-disabled",
                                                                    "error": "Mui-error",
                                                                    "focused": "Mui-focused",
                                                                    "input": "MuiOutlinedInput-input",
                                                                    "inputAdornedEnd": "MuiOutlinedInput-inputAdornedEnd",
                                                                    "inputAdornedStart": "MuiOutlinedInput-inputAdornedStart",
                                                                    "inputMarginDense": "MuiOutlinedInput-inputMarginDense",
                                                                    "inputMultiline": "MuiOutlinedInput-inputMultiline",
                                                                    "inputSelect": "MuiOutlinedInput-inputSelect",
                                                                    "marginDense": "MuiOutlinedInput-marginDense",
                                                                    "multiline": "MuiOutlinedInput-multiline",
                                                                    "notchedOutline": null,
                                                                    "root": "MuiOutlinedInput-root",
                                                                  }
                                                                }
                                                                fullWidth={true}
                                                                inputComponent="input"
                                                                multiline={false}
                                                                name="email"
                                                                onBlur={[Function]}
                                                                onChange={[Function]}
                                                                renderPrefix={[Function]}
                                                                type="email"
                                                                value=""
                                                              >
                                                                <ForwardRef(InputBase)
                                                                  classes={
                                                                    Object {
                                                                      "adornedEnd": "MuiInputBase-adornedEnd MuiOutlinedInput-adornedEnd",
                                                                      "adornedStart": "MuiInputBase-adornedStart MuiOutlinedInput-adornedStart",
                                                                      "disabled": "Mui-disabled Mui-disabled",
                                                                      "error": "Mui-error Mui-error",
                                                                      "focused": "Mui-focused Mui-focused",
                                                                      "formControl": "MuiInputBase-formControl",
                                                                      "fullWidth": "MuiInputBase-fullWidth",
                                                                      "input": "MuiInputBase-input MuiOutlinedInput-input",
                                                                      "inputAdornedEnd": "MuiInputBase-inputAdornedEnd MuiOutlinedInput-inputAdornedEnd",
                                                                      "inputAdornedStart": "MuiInputBase-inputAdornedStart MuiOutlinedInput-inputAdornedStart",
                                                                      "inputMarginDense": "MuiInputBase-inputMarginDense MuiOutlinedInput-inputMarginDense",
                                                                      "inputMultiline": "MuiInputBase-inputMultiline MuiOutlinedInput-inputMultiline",
                                                                      "inputSelect": "MuiInputBase-inputSelect MuiOutlinedInput-inputSelect",
                                                                      "inputTypeSearch": "MuiInputBase-inputTypeSearch",
                                                                      "marginDense": "MuiInputBase-marginDense MuiOutlinedInput-marginDense",
                                                                      "multiline": "MuiInputBase-multiline MuiOutlinedInput-multiline",
                                                                      "root": "MuiInputBase-root MuiOutlinedInput-root",
                                                                    }
                                                                  }
                                                                  fullWidth={true}
                                                                  inputComponent="input"
                                                                  multiline={false}
                                                                  name="email"
                                                                  onBlur={[Function]}
                                                                  onChange={[Function]}
                                                                  renderPrefix={[Function]}
                                                                  type="email"
                                                                  value=""
                                                                >
                                                                  <div
                                                                    className="MuiInputBase-root MuiOutlinedInput-root MuiInputBase-fullWidth MuiInputBase-formControl"
                                                                    onClick={[Function]}
                                                                  >
                                                                    <WithStyles(ForwardRef(NotchedOutline))
                                                                      className="MuiOutlinedInput-notchedOutline"
                                                                      labelWidth={0}
                                                                      notched={false}
                                                                    >
                                                                      <ForwardRef(NotchedOutline)
                                                                        className="MuiOutlinedInput-notchedOutline"
                                                                        classes={
                                                                          Object {
                                                                            "legend": "PrivateNotchedOutline-legend-134",
                                                                            "root": "PrivateNotchedOutline-root-133",
                                                                          }
                                                                        }
                                                                        labelWidth={0}
                                                                        notched={false}
                                                                        theme={
                                                                          Object {
                                                                            "breakpoints": Object {
                                                                              "between": [Function],
                                                                              "down": [Function],
                                                                              "keys": Array [
                                                                                "xs",
                                                                                "sm",
                                                                                "md",
                                                                                "lg",
                                                                                "xl",
                                                                              ],
                                                                              "only": [Function],
                                                                              "up": [Function],
                                                                              "values": Object {
                                                                                "lg": 1280,
                                                                                "md": 960,
                                                                                "sm": 600,
                                                                                "xl": 1920,
                                                                                "xs": 0,
                                                                              },
                                                                              "width": [Function],
                                                                            },
                                                                            "direction": "ltr",
                                                                            "mixins": Object {
                                                                              "gutters": [Function],
                                                                              "toolbar": Object {
                                                                                "@media (min-width:0px) and (orientation: landscape)": Object {
                                                                                  "minHeight": 48,
                                                                                },
                                                                                "@media (min-width:600px)": Object {
                                                                                  "minHeight": 64,
                                                                                },
                                                                                "minHeight": 56,
                                                                              },
                                                                            },
                                                                            "overrides": Object {},
                                                                            "palette": Object {
                                                                              "action": Object {
                                                                                "active": "rgba(0, 0, 0, 0.54)",
                                                                                "disabled": "rgba(0, 0, 0, 0.26)",
                                                                                "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                                                                "hover": "rgba(0, 0, 0, 0.08)",
                                                                                "hoverOpacity": 0.08,
                                                                                "selected": "rgba(0, 0, 0, 0.14)",
                                                                              },
                                                                              "augmentColor": [Function],
                                                                              "background": Object {
                                                                                "default": "#fafafa",
                                                                                "paper": "#fff",
                                                                              },
                                                                              "common": Object {
                                                                                "black": "#000",
                                                                                "white": "#fff",
                                                                              },
                                                                              "contrastThreshold": 3,
                                                                              "divider": "rgba(0, 0, 0, 0.12)",
                                                                              "error": Object {
                                                                                "contrastText": "#fff",
                                                                                "dark": "#d32f2f",
                                                                                "light": "#e57373",
                                                                                "main": "#f44336",
                                                                              },
                                                                              "getContrastText": [Function],
                                                                              "grey": Object {
                                                                                "100": "#f5f5f5",
                                                                                "200": "#eeeeee",
                                                                                "300": "#e0e0e0",
                                                                                "400": "#bdbdbd",
                                                                                "50": "#fafafa",
                                                                                "500": "#9e9e9e",
                                                                                "600": "#757575",
                                                                                "700": "#616161",
                                                                                "800": "#424242",
                                                                                "900": "#212121",
                                                                                "A100": "#d5d5d5",
                                                                                "A200": "#aaaaaa",
                                                                                "A400": "#303030",
                                                                                "A700": "#616161",
                                                                              },
                                                                              "primary": Object {
                                                                                "contrastText": "#fff",
                                                                                "dark": "#303f9f",
                                                                                "light": "#7986cb",
                                                                                "main": "#3f51b5",
                                                                              },
                                                                              "secondary": Object {
                                                                                "contrastText": "#fff",
                                                                                "dark": "#c51162",
                                                                                "light": "#ff4081",
                                                                                "main": "#f50057",
                                                                              },
                                                                              "text": Object {
                                                                                "disabled": "rgba(0, 0, 0, 0.38)",
                                                                                "hint": "rgba(0, 0, 0, 0.38)",
                                                                                "primary": "rgba(0, 0, 0, 0.87)",
                                                                                "secondary": "rgba(0, 0, 0, 0.54)",
                                                                              },
                                                                              "tonalOffset": 0.2,
                                                                              "type": "light",
                                                                            },
                                                                            "props": Object {},
                                                                            "shadows": Array [
                                                                              "none",
                                                                              "0px 1px 3px 0px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 2px 1px -1px rgba(0,0,0,0.12)",
                                                                              "0px 1px 5px 0px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 3px 1px -2px rgba(0,0,0,0.12)",
                                                                              "0px 1px 8px 0px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 3px 3px -2px rgba(0,0,0,0.12)",
                                                                              "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                                                              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                                                              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                                                              "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                                                              "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                                                              "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                                                              "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                                                              "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                                                              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                                                              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                                                              "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                                                              "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                                                              "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                                                              "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                                                              "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                                                              "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                                                              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                                                              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                                                              "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                                                              "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                                                              "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                                                            ],
                                                                            "shape": Object {
                                                                              "borderRadius": 4,
                                                                            },
                                                                            "spacing": [Function],
                                                                            "transitions": Object {
                                                                              "create": [Function],
                                                                              "duration": Object {
                                                                                "complex": 375,
                                                                                "enteringScreen": 225,
                                                                                "leavingScreen": 195,
                                                                                "short": 250,
                                                                                "shorter": 200,
                                                                                "shortest": 150,
                                                                                "standard": 300,
                                                                              },
                                                                              "easing": Object {
                                                                                "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                                                                "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                                                                "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                                                                "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                                                              },
                                                                              "getAutoHeightDuration": [Function],
                                                                            },
                                                                            "typography": Object {
                                                                              "body1": Object {
                                                                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                                "fontSize": "1rem",
                                                                                "fontWeight": 400,
                                                                                "letterSpacing": "0.00938em",
                                                                                "lineHeight": 1.5,
                                                                              },
                                                                              "body2": Object {
                                                                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                                "fontSize": "0.875rem",
                                                                                "fontWeight": 400,
                                                                                "letterSpacing": "0.01071em",
                                                                                "lineHeight": 1.43,
                                                                              },
                                                                              "button": Object {
                                                                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                                "fontSize": "0.875rem",
                                                                                "fontWeight": 500,
                                                                                "letterSpacing": "0.02857em",
                                                                                "lineHeight": 1.75,
                                                                                "textTransform": "uppercase",
                                                                              },
                                                                              "caption": Object {
                                                                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                                "fontSize": "0.75rem",
                                                                                "fontWeight": 400,
                                                                                "letterSpacing": "0.03333em",
                                                                                "lineHeight": 1.66,
                                                                              },
                                                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                              "fontSize": 14,
                                                                              "fontWeightBold": 700,
                                                                              "fontWeightLight": 300,
                                                                              "fontWeightMedium": 500,
                                                                              "fontWeightRegular": 400,
                                                                              "h1": Object {
                                                                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                                "fontSize": "6rem",
                                                                                "fontWeight": 300,
                                                                                "letterSpacing": "-0.01562em",
                                                                                "lineHeight": 1,
                                                                              },
                                                                              "h2": Object {
                                                                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                                "fontSize": "3.75rem",
                                                                                "fontWeight": 300,
                                                                                "letterSpacing": "-0.00833em",
                                                                                "lineHeight": 1,
                                                                              },
                                                                              "h3": Object {
                                                                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                                "fontSize": "3rem",
                                                                                "fontWeight": 400,
                                                                                "letterSpacing": "0em",
                                                                                "lineHeight": 1.04,
                                                                              },
                                                                              "h4": Object {
                                                                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                                "fontSize": "2.125rem",
                                                                                "fontWeight": 400,
                                                                                "letterSpacing": "0.00735em",
                                                                                "lineHeight": 1.17,
                                                                              },
                                                                              "h5": Object {
                                                                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                                "fontSize": "1.5rem",
                                                                                "fontWeight": 400,
                                                                                "letterSpacing": "0em",
                                                                                "lineHeight": 1.33,
                                                                              },
                                                                              "h6": Object {
                                                                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                                "fontSize": "1.25rem",
                                                                                "fontWeight": 500,
                                                                                "letterSpacing": "0.0075em",
                                                                                "lineHeight": 1.6,
                                                                              },
                                                                              "htmlFontSize": 16,
                                                                              "overline": Object {
                                                                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                                "fontSize": "0.75rem",
                                                                                "fontWeight": 400,
                                                                                "letterSpacing": "0.08333em",
                                                                                "lineHeight": 2.66,
                                                                                "textTransform": "uppercase",
                                                                              },
                                                                              "pxToRem": [Function],
                                                                              "round": [Function],
                                                                              "subtitle1": Object {
                                                                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                                "fontSize": "1rem",
                                                                                "fontWeight": 400,
                                                                                "letterSpacing": "0.00938em",
                                                                                "lineHeight": 1.75,
                                                                              },
                                                                              "subtitle2": Object {
                                                                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                                "fontSize": "0.875rem",
                                                                                "fontWeight": 500,
                                                                                "letterSpacing": "0.00714em",
                                                                                "lineHeight": 1.57,
                                                                              },
                                                                            },
                                                                            "zIndex": Object {
                                                                              "appBar": 1100,
                                                                              "drawer": 1200,
                                                                              "mobileStepper": 1000,
                                                                              "modal": 1300,
                                                                              "snackbar": 1400,
                                                                              "tooltip": 1500,
                                                                            },
                                                                          }
                                                                        }
                                                                      >
                                                                        <fieldset
                                                                          aria-hidden={true}
                                                                          className="PrivateNotchedOutline-root-133 MuiOutlinedInput-notchedOutline"
                                                                          style={
                                                                            Object {
                                                                              "paddingLeft": 8,
                                                                            }
                                                                          }
                                                                        >
                                                                          <legend
                                                                            className="PrivateNotchedOutline-legend-134"
                                                                            style={
                                                                              Object {
                                                                                "width": 0.01,
                                                                              }
                                                                            }
                                                                          >
                                                                            <span
                                                                              dangerouslySetInnerHTML={
                                                                                Object {
                                                                                  "__html": "&#8203;",
                                                                                }
                                                                              }
                                                                            />
                                                                          </legend>
                                                                        </fieldset>
                                                                      </ForwardRef(NotchedOutline)>
                                                                    </WithStyles(ForwardRef(NotchedOutline))>
                                                                    <input
                                                                      aria-invalid={false}
                                                                      className="MuiInputBase-input MuiOutlinedInput-input"
                                                                      disabled={false}
                                                                      name="email"
                                                                      onBlur={[Function]}
                                                                      onChange={[Function]}
                                                                      onFocus={[Function]}
                                                                      required={false}
                                                                      type="email"
                                                                      value=""
                                                                    />
                                                                  </div>
                                                                </ForwardRef(InputBase)>
                                                              </WithStyles(ForwardRef(InputBase))>
                                                            </ForwardRef(OutlinedInput)>
                                                          </WithStyles(ForwardRef(OutlinedInput))>
                                                        </div>
                                                      </ForwardRef(FormControl)>
                                                    </WithStyles(ForwardRef(FormControl))>
                                                  </ForwardRef(TextField)>
                                                </WithStyles(ForwardRef(TextField))>
                                              </TextField>
                                            </Field>
                                          </div>
                                        </Styled(MuiBox)>
                                        <Styled(MuiBox)
                                          mb={2}
                                        >
                                          <div
                                            className="MuiBox-root MuiBox-root-135"
                                          >
                                            <Field
                                              fieldType="text"
                                              formikProps={
                                                Object {
                                                  "dirty": false,
                                                  "errors": Object {},
                                                  "handleBlur": [Function],
                                                  "handleChange": [Function],
                                                  "handleReset": [Function],
                                                  "handleSubmit": [Function],
                                                  "initialValues": Object {
                                                    "email": "",
                                                    "password": "",
                                                    "passwordConfirm": "",
                                                    "username": "",
                                                  },
                                                  "isSubmitting": false,
                                                  "isValid": false,
                                                  "isValidating": false,
                                                  "registerField": [Function],
                                                  "resetForm": [Function],
                                                  "setError": [Function],
                                                  "setErrors": [Function],
                                                  "setFieldError": [Function],
                                                  "setFieldTouched": [Function],
                                                  "setFieldValue": [Function],
                                                  "setFormikState": [Function],
                                                  "setStatus": [Function],
                                                  "setSubmitting": [Function],
                                                  "setTouched": [Function],
                                                  "setValues": [Function],
                                                  "status": undefined,
                                                  "submitCount": 0,
                                                  "submitForm": [Function],
                                                  "touched": Object {},
                                                  "unregisterField": [Function],
                                                  "validateField": [Function],
                                                  "validateForm": [Function],
                                                  "validateOnBlur": true,
                                                  "validateOnChange": true,
                                                  "values": Object {
                                                    "email": "",
                                                    "password": "",
                                                    "passwordConfirm": "",
                                                    "username": "",
                                                  },
                                                }
                                              }
                                              fullWidth={true}
                                              label="Username"
                                              name="username"
                                              type="text"
                                              variant="outlined"
                                            >
                                              <TextField
                                                errors={Object {}}
                                                fullWidth={true}
                                                handleBlur={[Function]}
                                                handleChange={[Function]}
                                                label="Username"
                                                name="username"
                                                touched={Object {}}
                                                type="text"
                                                values={
                                                  Object {
                                                    "email": "",
                                                    "password": "",
                                                    "passwordConfirm": "",
                                                    "username": "",
                                                  }
                                                }
                                                variant="outlined"
                                              >
                                                <WithStyles(ForwardRef(TextField))
                                                  error={false}
                                                  fullWidth={true}
                                                  label="Username"
                                                  name="username"
                                                  onBlur={[Function]}
                                                  onChange={[Function]}
                                                  type="text"
                                                  value=""
                                                  variant="outlined"
                                                >
                                                  <ForwardRef(TextField)
                                                    classes={
                                                      Object {
                                                        "root": "MuiTextField-root",
                                                      }
                                                    }
                                                    error={false}
                                                    fullWidth={true}
                                                    label="Username"
                                                    name="username"
                                                    onBlur={[Function]}
                                                    onChange={[Function]}
                                                    type="text"
                                                    value=""
                                                    variant="outlined"
                                                  >
                                                    <WithStyles(ForwardRef(FormControl))
                                                      className="MuiTextField-root"
                                                      error={false}
                                                      fullWidth={true}
                                                      required={false}
                                                      variant="outlined"
                                                    >
                                                      <ForwardRef(FormControl)
                                                        className="MuiTextField-root"
                                                        classes={
                                                          Object {
                                                            "fullWidth": "MuiFormControl-fullWidth",
                                                            "marginDense": "MuiFormControl-marginDense",
                                                            "marginNormal": "MuiFormControl-marginNormal",
                                                            "root": "MuiFormControl-root",
                                                          }
                                                        }
                                                        error={false}
                                                        fullWidth={true}
                                                        required={false}
                                                        variant="outlined"
                                                      >
                                                        <div
                                                          className="MuiFormControl-root MuiTextField-root MuiFormControl-fullWidth"
                                                        >
                                                          <WithStyles(ForwardRef(InputLabel))>
                                                            <ForwardRef(InputLabel)
                                                              classes={
                                                                Object {
                                                                  "animated": "MuiInputLabel-animated",
                                                                  "asterisk": "MuiInputLabel-asterisk",
                                                                  "disabled": "Mui-disabled",
                                                                  "error": "Mui-error",
                                                                  "filled": "MuiInputLabel-filled",
                                                                  "focused": "Mui-focused",
                                                                  "formControl": "MuiInputLabel-formControl",
                                                                  "marginDense": "MuiInputLabel-marginDense",
                                                                  "outlined": "MuiInputLabel-outlined",
                                                                  "required": "Mui-required",
                                                                  "root": "MuiInputLabel-root",
                                                                  "shrink": "MuiInputLabel-shrink",
                                                                }
                                                              }
                                                            >
                                                              <WithStyles(ForwardRef(FormLabel))
                                                                className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined"
                                                                classes={
                                                                  Object {
                                                                    "asterisk": "MuiInputLabel-asterisk",
                                                                    "disabled": "Mui-disabled",
                                                                    "error": "Mui-error",
                                                                    "focused": "Mui-focused",
                                                                    "required": "Mui-required",
                                                                  }
                                                                }
                                                                data-shrink={false}
                                                              >
                                                                <ForwardRef(FormLabel)
                                                                  className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined"
                                                                  classes={
                                                                    Object {
                                                                      "asterisk": "MuiFormLabel-asterisk MuiInputLabel-asterisk",
                                                                      "disabled": "Mui-disabled Mui-disabled",
                                                                      "error": "Mui-error Mui-error",
                                                                      "filled": "MuiFormLabel-filled",
                                                                      "focused": "Mui-focused Mui-focused",
                                                                      "required": "Mui-required Mui-required",
                                                                      "root": "MuiFormLabel-root",
                                                                    }
                                                                  }
                                                                  data-shrink={false}
                                                                >
                                                                  <label
                                                                    className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined"
                                                                    data-shrink={false}
                                                                  >
                                                                    Username
                                                                  </label>
                                                                </ForwardRef(FormLabel)>
                                                              </WithStyles(ForwardRef(FormLabel))>
                                                            </ForwardRef(InputLabel)>
                                                          </WithStyles(ForwardRef(InputLabel))>
                                                          <WithStyles(ForwardRef(OutlinedInput))
                                                            fullWidth={true}
                                                            labelWidth={0}
                                                            name="username"
                                                            onBlur={[Function]}
                                                            onChange={[Function]}
                                                            type="text"
                                                            value=""
                                                          >
                                                            <ForwardRef(OutlinedInput)
                                                              classes={
                                                                Object {
                                                                  "adornedEnd": "MuiOutlinedInput-adornedEnd",
                                                                  "adornedStart": "MuiOutlinedInput-adornedStart",
                                                                  "disabled": "Mui-disabled",
                                                                  "error": "Mui-error",
                                                                  "focused": "Mui-focused",
                                                                  "input": "MuiOutlinedInput-input",
                                                                  "inputAdornedEnd": "MuiOutlinedInput-inputAdornedEnd",
                                                                  "inputAdornedStart": "MuiOutlinedInput-inputAdornedStart",
                                                                  "inputMarginDense": "MuiOutlinedInput-inputMarginDense",
                                                                  "inputMultiline": "MuiOutlinedInput-inputMultiline",
                                                                  "inputSelect": "MuiOutlinedInput-inputSelect",
                                                                  "marginDense": "MuiOutlinedInput-marginDense",
                                                                  "multiline": "MuiOutlinedInput-multiline",
                                                                  "notchedOutline": "MuiOutlinedInput-notchedOutline",
                                                                  "root": "MuiOutlinedInput-root",
                                                                }
                                                              }
                                                              fullWidth={true}
                                                              labelWidth={0}
                                                              name="username"
                                                              onBlur={[Function]}
                                                              onChange={[Function]}
                                                              type="text"
                                                              value=""
                                                            >
                                                              <WithStyles(ForwardRef(InputBase))
                                                                classes={
                                                                  Object {
                                                                    "adornedEnd": "MuiOutlinedInput-adornedEnd",
                                                                    "adornedStart": "MuiOutlinedInput-adornedStart",
                                                                    "disabled": "Mui-disabled",
                                                                    "error": "Mui-error",
                                                                    "focused": "Mui-focused",
                                                                    "input": "MuiOutlinedInput-input",
                                                                    "inputAdornedEnd": "MuiOutlinedInput-inputAdornedEnd",
                                                                    "inputAdornedStart": "MuiOutlinedInput-inputAdornedStart",
                                                                    "inputMarginDense": "MuiOutlinedInput-inputMarginDense",
                                                                    "inputMultiline": "MuiOutlinedInput-inputMultiline",
                                                                    "inputSelect": "MuiOutlinedInput-inputSelect",
                                                                    "marginDense": "MuiOutlinedInput-marginDense",
                                                                    "multiline": "MuiOutlinedInput-multiline",
                                                                    "notchedOutline": null,
                                                                    "root": "MuiOutlinedInput-root",
                                                                  }
                                                                }
                                                                fullWidth={true}
                                                                inputComponent="input"
                                                                multiline={false}
                                                                name="username"
                                                                onBlur={[Function]}
                                                                onChange={[Function]}
                                                                renderPrefix={[Function]}
                                                                type="text"
                                                                value=""
                                                              >
                                                                <ForwardRef(InputBase)
                                                                  classes={
                                                                    Object {
                                                                      "adornedEnd": "MuiInputBase-adornedEnd MuiOutlinedInput-adornedEnd",
                                                                      "adornedStart": "MuiInputBase-adornedStart MuiOutlinedInput-adornedStart",
                                                                      "disabled": "Mui-disabled Mui-disabled",
                                                                      "error": "Mui-error Mui-error",
                                                                      "focused": "Mui-focused Mui-focused",
                                                                      "formControl": "MuiInputBase-formControl",
                                                                      "fullWidth": "MuiInputBase-fullWidth",
                                                                      "input": "MuiInputBase-input MuiOutlinedInput-input",
                                                                      "inputAdornedEnd": "MuiInputBase-inputAdornedEnd MuiOutlinedInput-inputAdornedEnd",
                                                                      "inputAdornedStart": "MuiInputBase-inputAdornedStart MuiOutlinedInput-inputAdornedStart",
                                                                      "inputMarginDense": "MuiInputBase-inputMarginDense MuiOutlinedInput-inputMarginDense",
                                                                      "inputMultiline": "MuiInputBase-inputMultiline MuiOutlinedInput-inputMultiline",
                                                                      "inputSelect": "MuiInputBase-inputSelect MuiOutlinedInput-inputSelect",
                                                                      "inputTypeSearch": "MuiInputBase-inputTypeSearch",
                                                                      "marginDense": "MuiInputBase-marginDense MuiOutlinedInput-marginDense",
                                                                      "multiline": "MuiInputBase-multiline MuiOutlinedInput-multiline",
                                                                      "root": "MuiInputBase-root MuiOutlinedInput-root",
                                                                    }
                                                                  }
                                                                  fullWidth={true}
                                                                  inputComponent="input"
                                                                  multiline={false}
                                                                  name="username"
                                                                  onBlur={[Function]}
                                                                  onChange={[Function]}
                                                                  renderPrefix={[Function]}
                                                                  type="text"
                                                                  value=""
                                                                >
                                                                  <div
                                                                    className="MuiInputBase-root MuiOutlinedInput-root MuiInputBase-fullWidth MuiInputBase-formControl"
                                                                    onClick={[Function]}
                                                                  >
                                                                    <WithStyles(ForwardRef(NotchedOutline))
                                                                      className="MuiOutlinedInput-notchedOutline"
                                                                      labelWidth={0}
                                                                      notched={false}
                                                                    >
                                                                      <ForwardRef(NotchedOutline)
                                                                        className="MuiOutlinedInput-notchedOutline"
                                                                        classes={
                                                                          Object {
                                                                            "legend": "PrivateNotchedOutline-legend-134",
                                                                            "root": "PrivateNotchedOutline-root-133",
                                                                          }
                                                                        }
                                                                        labelWidth={0}
                                                                        notched={false}
                                                                        theme={
                                                                          Object {
                                                                            "breakpoints": Object {
                                                                              "between": [Function],
                                                                              "down": [Function],
                                                                              "keys": Array [
                                                                                "xs",
                                                                                "sm",
                                                                                "md",
                                                                                "lg",
                                                                                "xl",
                                                                              ],
                                                                              "only": [Function],
                                                                              "up": [Function],
                                                                              "values": Object {
                                                                                "lg": 1280,
                                                                                "md": 960,
                                                                                "sm": 600,
                                                                                "xl": 1920,
                                                                                "xs": 0,
                                                                              },
                                                                              "width": [Function],
                                                                            },
                                                                            "direction": "ltr",
                                                                            "mixins": Object {
                                                                              "gutters": [Function],
                                                                              "toolbar": Object {
                                                                                "@media (min-width:0px) and (orientation: landscape)": Object {
                                                                                  "minHeight": 48,
                                                                                },
                                                                                "@media (min-width:600px)": Object {
                                                                                  "minHeight": 64,
                                                                                },
                                                                                "minHeight": 56,
                                                                              },
                                                                            },
                                                                            "overrides": Object {},
                                                                            "palette": Object {
                                                                              "action": Object {
                                                                                "active": "rgba(0, 0, 0, 0.54)",
                                                                                "disabled": "rgba(0, 0, 0, 0.26)",
                                                                                "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                                                                "hover": "rgba(0, 0, 0, 0.08)",
                                                                                "hoverOpacity": 0.08,
                                                                                "selected": "rgba(0, 0, 0, 0.14)",
                                                                              },
                                                                              "augmentColor": [Function],
                                                                              "background": Object {
                                                                                "default": "#fafafa",
                                                                                "paper": "#fff",
                                                                              },
                                                                              "common": Object {
                                                                                "black": "#000",
                                                                                "white": "#fff",
                                                                              },
                                                                              "contrastThreshold": 3,
                                                                              "divider": "rgba(0, 0, 0, 0.12)",
                                                                              "error": Object {
                                                                                "contrastText": "#fff",
                                                                                "dark": "#d32f2f",
                                                                                "light": "#e57373",
                                                                                "main": "#f44336",
                                                                              },
                                                                              "getContrastText": [Function],
                                                                              "grey": Object {
                                                                                "100": "#f5f5f5",
                                                                                "200": "#eeeeee",
                                                                                "300": "#e0e0e0",
                                                                                "400": "#bdbdbd",
                                                                                "50": "#fafafa",
                                                                                "500": "#9e9e9e",
                                                                                "600": "#757575",
                                                                                "700": "#616161",
                                                                                "800": "#424242",
                                                                                "900": "#212121",
                                                                                "A100": "#d5d5d5",
                                                                                "A200": "#aaaaaa",
                                                                                "A400": "#303030",
                                                                                "A700": "#616161",
                                                                              },
                                                                              "primary": Object {
                                                                                "contrastText": "#fff",
                                                                                "dark": "#303f9f",
                                                                                "light": "#7986cb",
                                                                                "main": "#3f51b5",
                                                                              },
                                                                              "secondary": Object {
                                                                                "contrastText": "#fff",
                                                                                "dark": "#c51162",
                                                                                "light": "#ff4081",
                                                                                "main": "#f50057",
                                                                              },
                                                                              "text": Object {
                                                                                "disabled": "rgba(0, 0, 0, 0.38)",
                                                                                "hint": "rgba(0, 0, 0, 0.38)",
                                                                                "primary": "rgba(0, 0, 0, 0.87)",
                                                                                "secondary": "rgba(0, 0, 0, 0.54)",
                                                                              },
                                                                              "tonalOffset": 0.2,
                                                                              "type": "light",
                                                                            },
                                                                            "props": Object {},
                                                                            "shadows": Array [
                                                                              "none",
                                                                              "0px 1px 3px 0px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 2px 1px -1px rgba(0,0,0,0.12)",
                                                                              "0px 1px 5px 0px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 3px 1px -2px rgba(0,0,0,0.12)",
                                                                              "0px 1px 8px 0px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 3px 3px -2px rgba(0,0,0,0.12)",
                                                                              "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                                                              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                                                              "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                                                              "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                                                              "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                                                              "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                                                              "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                                                              "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                                                              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                                                              "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                                                              "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                                                              "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                                                              "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                                                              "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                                                              "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                                                              "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                                                              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                                                              "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                                                              "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                                                              "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                                                              "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                                                            ],
                                                                            "shape": Object {
                                                                              "borderRadius": 4,
                                                                            },
                                                                            "spacing": [Function],
                                                                            "transitions": Object {
                                                                              "create": [Function],
                                                                              "duration": Object {
                                                                                "complex": 375,
                                                                                "enteringScreen": 225,
                                                                                "leavingScreen": 195,
                                                                                "short": 250,
                                                                                "shorter": 200,
                                                                                "shortest": 150,
                                                                                "standard": 300,
                                                                              },
                                                                              "easing": Object {
                                                                                "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                                                                "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                                                                "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                                                                "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                                                              },
                                                                              "getAutoHeightDuration": [Function],
                                                                            },
                                                                            "typography": Object {
                                                                              "body1": Object {
                                                                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                                "fontSize": "1rem",
                                                                                "fontWeight": 400,
                                                                                "letterSpacing": "0.00938em",
                                                                                "lineHeight": 1.5,
                                                                              },
                                                                              "body2": Object {
                                                                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                                "fontSize": "0.875rem",
                                                                                "fontWeight": 400,
                                                                                "letterSpacing": "0.01071em",
                                                                                "lineHeight": 1.43,
                                                                              },
                                                                              "button": Object {
                                                                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                                "fontSize": "0.875rem",
                                                                                "fontWeight": 500,
                                                                                "letterSpacing": "0.02857em",
                                                                                "lineHeight": 1.75,
                                                                                "textTransform": "uppercase",
                                                                              },
                                                                              "caption": Object {
                                                                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                                "fontSize": "0.75rem",
                                                                                "fontWeight": 400,
                                                                                "letterSpacing": "0.03333em",
                                                                                "lineHeight": 1.66,
                                                                              },
                                                                              "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                              "fontSize": 14,
                                                                              "fontWeightBold": 700,
                                                                              "fontWeightLight": 300,
                                                                              "fontWeightMedium": 500,
                                                                              "fontWeightRegular": 400,
                                                                              "h1": Object {
                                                                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                                "fontSize": "6rem",
                                                                                "fontWeight": 300,
                                                                                "letterSpacing": "-0.01562em",
                                                                                "lineHeight": 1,
                                                                              },
                                                                              "h2": Object {
                                                                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                                "fontSize": "3.75rem",
                                                                                "fontWeight": 300,
                                                                                "letterSpacing": "-0.00833em",
                                                                                "lineHeight": 1,
                                                                              },
                                                                              "h3": Object {
                                                                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                                "fontSize": "3rem",
                                                                                "fontWeight": 400,
                                                                                "letterSpacing": "0em",
                                                                                "lineHeight": 1.04,
                                                                              },
                                                                              "h4": Object {
                                                                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                                "fontSize": "2.125rem",
                                                                                "fontWeight": 400,
                                                                                "letterSpacing": "0.00735em",
                                                                                "lineHeight": 1.17,
                                                                              },
                                                                              "h5": Object {
                                                                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                                "fontSize": "1.5rem",
                                                                                "fontWeight": 400,
                                                                                "letterSpacing": "0em",
                                                                                "lineHeight": 1.33,
                                                                              },
                                                                              "h6": Object {
                                                                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                                "fontSize": "1.25rem",
                                                                                "fontWeight": 500,
                                                                                "letterSpacing": "0.0075em",
                                                                                "lineHeight": 1.6,
                                                                              },
                                                                              "htmlFontSize": 16,
                                                                              "overline": Object {
                                                                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                                "fontSize": "0.75rem",
                                                                                "fontWeight": 400,
                                                                                "letterSpacing": "0.08333em",
                                                                                "lineHeight": 2.66,
                                                                                "textTransform": "uppercase",
                                                                              },
                                                                              "pxToRem": [Function],
                                                                              "round": [Function],
                                                                              "subtitle1": Object {
                                                                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                                "fontSize": "1rem",
                                                                                "fontWeight": 400,
                                                                                "letterSpacing": "0.00938em",
                                                                                "lineHeight": 1.75,
                                                                              },
                                                                              "subtitle2": Object {
                                                                                "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                                "fontSize": "0.875rem",
                                                                                "fontWeight": 500,
                                                                                "letterSpacing": "0.00714em",
                                                                                "lineHeight": 1.57,
                                                                              },
                                                                            },
                                                                            "zIndex": Object {
                                                                              "appBar": 1100,
                                                                              "drawer": 1200,
                                                                              "mobileStepper": 1000,
                                                                              "modal": 1300,
                                                                              "snackbar": 1400,
                                                                              "tooltip": 1500,
                                                                            },
                                                                          }
                                                                        }
                                                                      >
                                                                        <fieldset
                                                                          aria-hidden={true}
                                                                          className="PrivateNotchedOutline-root-133 MuiOutlinedInput-notchedOutline"
                                                                          style={
                                                                            Object {
                                                                              "paddingLeft": 8,
                                                                            }
                                                                          }
                                                                        >
                                                                          <legend
                                                                            className="PrivateNotchedOutline-legend-134"
                                                                            style={
                                                                              Object {
                                                                                "width": 0.01,
                                                                              }
                                                                            }
                                                                          >
                                                                            <span
                                                                              dangerouslySetInnerHTML={
                                                                                Object {
                                                                                  "__html": "&#8203;",
                                                                                }
                                                                              }
                                                                            />
                                                                          </legend>
                                                                        </fieldset>
                                                                      </ForwardRef(NotchedOutline)>
                                                                    </WithStyles(ForwardRef(NotchedOutline))>
                                                                    <input
                                                                      aria-invalid={false}
                                                                      className="MuiInputBase-input MuiOutlinedInput-input"
                                                                      disabled={false}
                                                                      name="username"
                                                                      onBlur={[Function]}
                                                                      onChange={[Function]}
                                                                      onFocus={[Function]}
                                                                      required={false}
                                                                      type="text"
                                                                      value=""
                                                                    />
                                                                  </div>
                                                                </ForwardRef(InputBase)>
                                                              </WithStyles(ForwardRef(InputBase))>
                                                            </ForwardRef(OutlinedInput)>
                                                          </WithStyles(ForwardRef(OutlinedInput))>
                                                        </div>
                                                      </ForwardRef(FormControl)>
                                                    </WithStyles(ForwardRef(FormControl))>
                                                  </ForwardRef(TextField)>
                                                </WithStyles(ForwardRef(TextField))>
                                              </TextField>
                                            </Field>
                                          </div>
                                        </Styled(MuiBox)>
                                        <Styled(MuiBox)
                                          mb={2}
                                        >
                                          <div
                                            className="MuiBox-root MuiBox-root-136"
                                          >
                                            <WithStyles(ForwardRef(Grid))
                                              container={true}
                                              spacing={3}
                                            >
                                              <ForwardRef(Grid)
                                                classes={
                                                  Object {
                                                    "align-content-xs-center": "MuiGrid-align-content-xs-center",
                                                    "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                                                    "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                                                    "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                                                    "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                                                    "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                                                    "align-items-xs-center": "MuiGrid-align-items-xs-center",
                                                    "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                                                    "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                                                    "container": "MuiGrid-container",
                                                    "direction-xs-column": "MuiGrid-direction-xs-column",
                                                    "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                                                    "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                                                    "grid-lg-1": "MuiGrid-grid-lg-1",
                                                    "grid-lg-10": "MuiGrid-grid-lg-10",
                                                    "grid-lg-11": "MuiGrid-grid-lg-11",
                                                    "grid-lg-12": "MuiGrid-grid-lg-12",
                                                    "grid-lg-2": "MuiGrid-grid-lg-2",
                                                    "grid-lg-3": "MuiGrid-grid-lg-3",
                                                    "grid-lg-4": "MuiGrid-grid-lg-4",
                                                    "grid-lg-5": "MuiGrid-grid-lg-5",
                                                    "grid-lg-6": "MuiGrid-grid-lg-6",
                                                    "grid-lg-7": "MuiGrid-grid-lg-7",
                                                    "grid-lg-8": "MuiGrid-grid-lg-8",
                                                    "grid-lg-9": "MuiGrid-grid-lg-9",
                                                    "grid-lg-auto": "MuiGrid-grid-lg-auto",
                                                    "grid-lg-true": "MuiGrid-grid-lg-true",
                                                    "grid-md-1": "MuiGrid-grid-md-1",
                                                    "grid-md-10": "MuiGrid-grid-md-10",
                                                    "grid-md-11": "MuiGrid-grid-md-11",
                                                    "grid-md-12": "MuiGrid-grid-md-12",
                                                    "grid-md-2": "MuiGrid-grid-md-2",
                                                    "grid-md-3": "MuiGrid-grid-md-3",
                                                    "grid-md-4": "MuiGrid-grid-md-4",
                                                    "grid-md-5": "MuiGrid-grid-md-5",
                                                    "grid-md-6": "MuiGrid-grid-md-6",
                                                    "grid-md-7": "MuiGrid-grid-md-7",
                                                    "grid-md-8": "MuiGrid-grid-md-8",
                                                    "grid-md-9": "MuiGrid-grid-md-9",
                                                    "grid-md-auto": "MuiGrid-grid-md-auto",
                                                    "grid-md-true": "MuiGrid-grid-md-true",
                                                    "grid-sm-1": "MuiGrid-grid-sm-1",
                                                    "grid-sm-10": "MuiGrid-grid-sm-10",
                                                    "grid-sm-11": "MuiGrid-grid-sm-11",
                                                    "grid-sm-12": "MuiGrid-grid-sm-12",
                                                    "grid-sm-2": "MuiGrid-grid-sm-2",
                                                    "grid-sm-3": "MuiGrid-grid-sm-3",
                                                    "grid-sm-4": "MuiGrid-grid-sm-4",
                                                    "grid-sm-5": "MuiGrid-grid-sm-5",
                                                    "grid-sm-6": "MuiGrid-grid-sm-6",
                                                    "grid-sm-7": "MuiGrid-grid-sm-7",
                                                    "grid-sm-8": "MuiGrid-grid-sm-8",
                                                    "grid-sm-9": "MuiGrid-grid-sm-9",
                                                    "grid-sm-auto": "MuiGrid-grid-sm-auto",
                                                    "grid-sm-true": "MuiGrid-grid-sm-true",
                                                    "grid-xl-1": "MuiGrid-grid-xl-1",
                                                    "grid-xl-10": "MuiGrid-grid-xl-10",
                                                    "grid-xl-11": "MuiGrid-grid-xl-11",
                                                    "grid-xl-12": "MuiGrid-grid-xl-12",
                                                    "grid-xl-2": "MuiGrid-grid-xl-2",
                                                    "grid-xl-3": "MuiGrid-grid-xl-3",
                                                    "grid-xl-4": "MuiGrid-grid-xl-4",
                                                    "grid-xl-5": "MuiGrid-grid-xl-5",
                                                    "grid-xl-6": "MuiGrid-grid-xl-6",
                                                    "grid-xl-7": "MuiGrid-grid-xl-7",
                                                    "grid-xl-8": "MuiGrid-grid-xl-8",
                                                    "grid-xl-9": "MuiGrid-grid-xl-9",
                                                    "grid-xl-auto": "MuiGrid-grid-xl-auto",
                                                    "grid-xl-true": "MuiGrid-grid-xl-true",
                                                    "grid-xs-1": "MuiGrid-grid-xs-1",
                                                    "grid-xs-10": "MuiGrid-grid-xs-10",
                                                    "grid-xs-11": "MuiGrid-grid-xs-11",
                                                    "grid-xs-12": "MuiGrid-grid-xs-12",
                                                    "grid-xs-2": "MuiGrid-grid-xs-2",
                                                    "grid-xs-3": "MuiGrid-grid-xs-3",
                                                    "grid-xs-4": "MuiGrid-grid-xs-4",
                                                    "grid-xs-5": "MuiGrid-grid-xs-5",
                                                    "grid-xs-6": "MuiGrid-grid-xs-6",
                                                    "grid-xs-7": "MuiGrid-grid-xs-7",
                                                    "grid-xs-8": "MuiGrid-grid-xs-8",
                                                    "grid-xs-9": "MuiGrid-grid-xs-9",
                                                    "grid-xs-auto": "MuiGrid-grid-xs-auto",
                                                    "grid-xs-true": "MuiGrid-grid-xs-true",
                                                    "item": "MuiGrid-item",
                                                    "justify-xs-center": "MuiGrid-justify-xs-center",
                                                    "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end",
                                                    "justify-xs-space-around": "MuiGrid-justify-xs-space-around",
                                                    "justify-xs-space-between": "MuiGrid-justify-xs-space-between",
                                                    "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly",
                                                    "root": "MuiGrid-root",
                                                    "spacing-xs-1": "MuiGrid-spacing-xs-1",
                                                    "spacing-xs-10": "MuiGrid-spacing-xs-10",
                                                    "spacing-xs-2": "MuiGrid-spacing-xs-2",
                                                    "spacing-xs-3": "MuiGrid-spacing-xs-3",
                                                    "spacing-xs-4": "MuiGrid-spacing-xs-4",
                                                    "spacing-xs-5": "MuiGrid-spacing-xs-5",
                                                    "spacing-xs-6": "MuiGrid-spacing-xs-6",
                                                    "spacing-xs-7": "MuiGrid-spacing-xs-7",
                                                    "spacing-xs-8": "MuiGrid-spacing-xs-8",
                                                    "spacing-xs-9": "MuiGrid-spacing-xs-9",
                                                    "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                                                    "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                                                    "zeroMinWidth": "MuiGrid-zeroMinWidth",
                                                  }
                                                }
                                                container={true}
                                                spacing={3}
                                              >
                                                <div
                                                  className="MuiGrid-root MuiGrid-container MuiGrid-spacing-xs-3"
                                                >
                                                  <WithStyles(ForwardRef(Grid))
                                                    item={true}
                                                    xs={6}
                                                  >
                                                    <ForwardRef(Grid)
                                                      classes={
                                                        Object {
                                                          "align-content-xs-center": "MuiGrid-align-content-xs-center",
                                                          "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                                                          "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                                                          "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                                                          "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                                                          "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                                                          "align-items-xs-center": "MuiGrid-align-items-xs-center",
                                                          "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                                                          "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                                                          "container": "MuiGrid-container",
                                                          "direction-xs-column": "MuiGrid-direction-xs-column",
                                                          "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                                                          "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                                                          "grid-lg-1": "MuiGrid-grid-lg-1",
                                                          "grid-lg-10": "MuiGrid-grid-lg-10",
                                                          "grid-lg-11": "MuiGrid-grid-lg-11",
                                                          "grid-lg-12": "MuiGrid-grid-lg-12",
                                                          "grid-lg-2": "MuiGrid-grid-lg-2",
                                                          "grid-lg-3": "MuiGrid-grid-lg-3",
                                                          "grid-lg-4": "MuiGrid-grid-lg-4",
                                                          "grid-lg-5": "MuiGrid-grid-lg-5",
                                                          "grid-lg-6": "MuiGrid-grid-lg-6",
                                                          "grid-lg-7": "MuiGrid-grid-lg-7",
                                                          "grid-lg-8": "MuiGrid-grid-lg-8",
                                                          "grid-lg-9": "MuiGrid-grid-lg-9",
                                                          "grid-lg-auto": "MuiGrid-grid-lg-auto",
                                                          "grid-lg-true": "MuiGrid-grid-lg-true",
                                                          "grid-md-1": "MuiGrid-grid-md-1",
                                                          "grid-md-10": "MuiGrid-grid-md-10",
                                                          "grid-md-11": "MuiGrid-grid-md-11",
                                                          "grid-md-12": "MuiGrid-grid-md-12",
                                                          "grid-md-2": "MuiGrid-grid-md-2",
                                                          "grid-md-3": "MuiGrid-grid-md-3",
                                                          "grid-md-4": "MuiGrid-grid-md-4",
                                                          "grid-md-5": "MuiGrid-grid-md-5",
                                                          "grid-md-6": "MuiGrid-grid-md-6",
                                                          "grid-md-7": "MuiGrid-grid-md-7",
                                                          "grid-md-8": "MuiGrid-grid-md-8",
                                                          "grid-md-9": "MuiGrid-grid-md-9",
                                                          "grid-md-auto": "MuiGrid-grid-md-auto",
                                                          "grid-md-true": "MuiGrid-grid-md-true",
                                                          "grid-sm-1": "MuiGrid-grid-sm-1",
                                                          "grid-sm-10": "MuiGrid-grid-sm-10",
                                                          "grid-sm-11": "MuiGrid-grid-sm-11",
                                                          "grid-sm-12": "MuiGrid-grid-sm-12",
                                                          "grid-sm-2": "MuiGrid-grid-sm-2",
                                                          "grid-sm-3": "MuiGrid-grid-sm-3",
                                                          "grid-sm-4": "MuiGrid-grid-sm-4",
                                                          "grid-sm-5": "MuiGrid-grid-sm-5",
                                                          "grid-sm-6": "MuiGrid-grid-sm-6",
                                                          "grid-sm-7": "MuiGrid-grid-sm-7",
                                                          "grid-sm-8": "MuiGrid-grid-sm-8",
                                                          "grid-sm-9": "MuiGrid-grid-sm-9",
                                                          "grid-sm-auto": "MuiGrid-grid-sm-auto",
                                                          "grid-sm-true": "MuiGrid-grid-sm-true",
                                                          "grid-xl-1": "MuiGrid-grid-xl-1",
                                                          "grid-xl-10": "MuiGrid-grid-xl-10",
                                                          "grid-xl-11": "MuiGrid-grid-xl-11",
                                                          "grid-xl-12": "MuiGrid-grid-xl-12",
                                                          "grid-xl-2": "MuiGrid-grid-xl-2",
                                                          "grid-xl-3": "MuiGrid-grid-xl-3",
                                                          "grid-xl-4": "MuiGrid-grid-xl-4",
                                                          "grid-xl-5": "MuiGrid-grid-xl-5",
                                                          "grid-xl-6": "MuiGrid-grid-xl-6",
                                                          "grid-xl-7": "MuiGrid-grid-xl-7",
                                                          "grid-xl-8": "MuiGrid-grid-xl-8",
                                                          "grid-xl-9": "MuiGrid-grid-xl-9",
                                                          "grid-xl-auto": "MuiGrid-grid-xl-auto",
                                                          "grid-xl-true": "MuiGrid-grid-xl-true",
                                                          "grid-xs-1": "MuiGrid-grid-xs-1",
                                                          "grid-xs-10": "MuiGrid-grid-xs-10",
                                                          "grid-xs-11": "MuiGrid-grid-xs-11",
                                                          "grid-xs-12": "MuiGrid-grid-xs-12",
                                                          "grid-xs-2": "MuiGrid-grid-xs-2",
                                                          "grid-xs-3": "MuiGrid-grid-xs-3",
                                                          "grid-xs-4": "MuiGrid-grid-xs-4",
                                                          "grid-xs-5": "MuiGrid-grid-xs-5",
                                                          "grid-xs-6": "MuiGrid-grid-xs-6",
                                                          "grid-xs-7": "MuiGrid-grid-xs-7",
                                                          "grid-xs-8": "MuiGrid-grid-xs-8",
                                                          "grid-xs-9": "MuiGrid-grid-xs-9",
                                                          "grid-xs-auto": "MuiGrid-grid-xs-auto",
                                                          "grid-xs-true": "MuiGrid-grid-xs-true",
                                                          "item": "MuiGrid-item",
                                                          "justify-xs-center": "MuiGrid-justify-xs-center",
                                                          "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end",
                                                          "justify-xs-space-around": "MuiGrid-justify-xs-space-around",
                                                          "justify-xs-space-between": "MuiGrid-justify-xs-space-between",
                                                          "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly",
                                                          "root": "MuiGrid-root",
                                                          "spacing-xs-1": "MuiGrid-spacing-xs-1",
                                                          "spacing-xs-10": "MuiGrid-spacing-xs-10",
                                                          "spacing-xs-2": "MuiGrid-spacing-xs-2",
                                                          "spacing-xs-3": "MuiGrid-spacing-xs-3",
                                                          "spacing-xs-4": "MuiGrid-spacing-xs-4",
                                                          "spacing-xs-5": "MuiGrid-spacing-xs-5",
                                                          "spacing-xs-6": "MuiGrid-spacing-xs-6",
                                                          "spacing-xs-7": "MuiGrid-spacing-xs-7",
                                                          "spacing-xs-8": "MuiGrid-spacing-xs-8",
                                                          "spacing-xs-9": "MuiGrid-spacing-xs-9",
                                                          "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                                                          "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                                                          "zeroMinWidth": "MuiGrid-zeroMinWidth",
                                                        }
                                                      }
                                                      item={true}
                                                      xs={6}
                                                    >
                                                      <div
                                                        className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-6"
                                                      >
                                                        <Field
                                                          fieldType="text"
                                                          formikProps={
                                                            Object {
                                                              "dirty": false,
                                                              "errors": Object {},
                                                              "handleBlur": [Function],
                                                              "handleChange": [Function],
                                                              "handleReset": [Function],
                                                              "handleSubmit": [Function],
                                                              "initialValues": Object {
                                                                "email": "",
                                                                "password": "",
                                                                "passwordConfirm": "",
                                                                "username": "",
                                                              },
                                                              "isSubmitting": false,
                                                              "isValid": false,
                                                              "isValidating": false,
                                                              "registerField": [Function],
                                                              "resetForm": [Function],
                                                              "setError": [Function],
                                                              "setErrors": [Function],
                                                              "setFieldError": [Function],
                                                              "setFieldTouched": [Function],
                                                              "setFieldValue": [Function],
                                                              "setFormikState": [Function],
                                                              "setStatus": [Function],
                                                              "setSubmitting": [Function],
                                                              "setTouched": [Function],
                                                              "setValues": [Function],
                                                              "status": undefined,
                                                              "submitCount": 0,
                                                              "submitForm": [Function],
                                                              "touched": Object {},
                                                              "unregisterField": [Function],
                                                              "validateField": [Function],
                                                              "validateForm": [Function],
                                                              "validateOnBlur": true,
                                                              "validateOnChange": true,
                                                              "values": Object {
                                                                "email": "",
                                                                "password": "",
                                                                "passwordConfirm": "",
                                                                "username": "",
                                                              },
                                                            }
                                                          }
                                                          fullWidth={true}
                                                          label="Password"
                                                          name="password"
                                                          type="password"
                                                          variant="outlined"
                                                        >
                                                          <TextField
                                                            errors={Object {}}
                                                            fullWidth={true}
                                                            handleBlur={[Function]}
                                                            handleChange={[Function]}
                                                            label="Password"
                                                            name="password"
                                                            touched={Object {}}
                                                            type="password"
                                                            values={
                                                              Object {
                                                                "email": "",
                                                                "password": "",
                                                                "passwordConfirm": "",
                                                                "username": "",
                                                              }
                                                            }
                                                            variant="outlined"
                                                          >
                                                            <WithStyles(ForwardRef(TextField))
                                                              error={false}
                                                              fullWidth={true}
                                                              label="Password"
                                                              name="password"
                                                              onBlur={[Function]}
                                                              onChange={[Function]}
                                                              type="password"
                                                              value=""
                                                              variant="outlined"
                                                            >
                                                              <ForwardRef(TextField)
                                                                classes={
                                                                  Object {
                                                                    "root": "MuiTextField-root",
                                                                  }
                                                                }
                                                                error={false}
                                                                fullWidth={true}
                                                                label="Password"
                                                                name="password"
                                                                onBlur={[Function]}
                                                                onChange={[Function]}
                                                                type="password"
                                                                value=""
                                                                variant="outlined"
                                                              >
                                                                <WithStyles(ForwardRef(FormControl))
                                                                  className="MuiTextField-root"
                                                                  error={false}
                                                                  fullWidth={true}
                                                                  required={false}
                                                                  variant="outlined"
                                                                >
                                                                  <ForwardRef(FormControl)
                                                                    className="MuiTextField-root"
                                                                    classes={
                                                                      Object {
                                                                        "fullWidth": "MuiFormControl-fullWidth",
                                                                        "marginDense": "MuiFormControl-marginDense",
                                                                        "marginNormal": "MuiFormControl-marginNormal",
                                                                        "root": "MuiFormControl-root",
                                                                      }
                                                                    }
                                                                    error={false}
                                                                    fullWidth={true}
                                                                    required={false}
                                                                    variant="outlined"
                                                                  >
                                                                    <div
                                                                      className="MuiFormControl-root MuiTextField-root MuiFormControl-fullWidth"
                                                                    >
                                                                      <WithStyles(ForwardRef(InputLabel))>
                                                                        <ForwardRef(InputLabel)
                                                                          classes={
                                                                            Object {
                                                                              "animated": "MuiInputLabel-animated",
                                                                              "asterisk": "MuiInputLabel-asterisk",
                                                                              "disabled": "Mui-disabled",
                                                                              "error": "Mui-error",
                                                                              "filled": "MuiInputLabel-filled",
                                                                              "focused": "Mui-focused",
                                                                              "formControl": "MuiInputLabel-formControl",
                                                                              "marginDense": "MuiInputLabel-marginDense",
                                                                              "outlined": "MuiInputLabel-outlined",
                                                                              "required": "Mui-required",
                                                                              "root": "MuiInputLabel-root",
                                                                              "shrink": "MuiInputLabel-shrink",
                                                                            }
                                                                          }
                                                                        >
                                                                          <WithStyles(ForwardRef(FormLabel))
                                                                            className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined"
                                                                            classes={
                                                                              Object {
                                                                                "asterisk": "MuiInputLabel-asterisk",
                                                                                "disabled": "Mui-disabled",
                                                                                "error": "Mui-error",
                                                                                "focused": "Mui-focused",
                                                                                "required": "Mui-required",
                                                                              }
                                                                            }
                                                                            data-shrink={false}
                                                                          >
                                                                            <ForwardRef(FormLabel)
                                                                              className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined"
                                                                              classes={
                                                                                Object {
                                                                                  "asterisk": "MuiFormLabel-asterisk MuiInputLabel-asterisk",
                                                                                  "disabled": "Mui-disabled Mui-disabled",
                                                                                  "error": "Mui-error Mui-error",
                                                                                  "filled": "MuiFormLabel-filled",
                                                                                  "focused": "Mui-focused Mui-focused",
                                                                                  "required": "Mui-required Mui-required",
                                                                                  "root": "MuiFormLabel-root",
                                                                                }
                                                                              }
                                                                              data-shrink={false}
                                                                            >
                                                                              <label
                                                                                className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined"
                                                                                data-shrink={false}
                                                                              >
                                                                                Password
                                                                              </label>
                                                                            </ForwardRef(FormLabel)>
                                                                          </WithStyles(ForwardRef(FormLabel))>
                                                                        </ForwardRef(InputLabel)>
                                                                      </WithStyles(ForwardRef(InputLabel))>
                                                                      <WithStyles(ForwardRef(OutlinedInput))
                                                                        fullWidth={true}
                                                                        labelWidth={0}
                                                                        name="password"
                                                                        onBlur={[Function]}
                                                                        onChange={[Function]}
                                                                        type="password"
                                                                        value=""
                                                                      >
                                                                        <ForwardRef(OutlinedInput)
                                                                          classes={
                                                                            Object {
                                                                              "adornedEnd": "MuiOutlinedInput-adornedEnd",
                                                                              "adornedStart": "MuiOutlinedInput-adornedStart",
                                                                              "disabled": "Mui-disabled",
                                                                              "error": "Mui-error",
                                                                              "focused": "Mui-focused",
                                                                              "input": "MuiOutlinedInput-input",
                                                                              "inputAdornedEnd": "MuiOutlinedInput-inputAdornedEnd",
                                                                              "inputAdornedStart": "MuiOutlinedInput-inputAdornedStart",
                                                                              "inputMarginDense": "MuiOutlinedInput-inputMarginDense",
                                                                              "inputMultiline": "MuiOutlinedInput-inputMultiline",
                                                                              "inputSelect": "MuiOutlinedInput-inputSelect",
                                                                              "marginDense": "MuiOutlinedInput-marginDense",
                                                                              "multiline": "MuiOutlinedInput-multiline",
                                                                              "notchedOutline": "MuiOutlinedInput-notchedOutline",
                                                                              "root": "MuiOutlinedInput-root",
                                                                            }
                                                                          }
                                                                          fullWidth={true}
                                                                          labelWidth={0}
                                                                          name="password"
                                                                          onBlur={[Function]}
                                                                          onChange={[Function]}
                                                                          type="password"
                                                                          value=""
                                                                        >
                                                                          <WithStyles(ForwardRef(InputBase))
                                                                            classes={
                                                                              Object {
                                                                                "adornedEnd": "MuiOutlinedInput-adornedEnd",
                                                                                "adornedStart": "MuiOutlinedInput-adornedStart",
                                                                                "disabled": "Mui-disabled",
                                                                                "error": "Mui-error",
                                                                                "focused": "Mui-focused",
                                                                                "input": "MuiOutlinedInput-input",
                                                                                "inputAdornedEnd": "MuiOutlinedInput-inputAdornedEnd",
                                                                                "inputAdornedStart": "MuiOutlinedInput-inputAdornedStart",
                                                                                "inputMarginDense": "MuiOutlinedInput-inputMarginDense",
                                                                                "inputMultiline": "MuiOutlinedInput-inputMultiline",
                                                                                "inputSelect": "MuiOutlinedInput-inputSelect",
                                                                                "marginDense": "MuiOutlinedInput-marginDense",
                                                                                "multiline": "MuiOutlinedInput-multiline",
                                                                                "notchedOutline": null,
                                                                                "root": "MuiOutlinedInput-root",
                                                                              }
                                                                            }
                                                                            fullWidth={true}
                                                                            inputComponent="input"
                                                                            multiline={false}
                                                                            name="password"
                                                                            onBlur={[Function]}
                                                                            onChange={[Function]}
                                                                            renderPrefix={[Function]}
                                                                            type="password"
                                                                            value=""
                                                                          >
                                                                            <ForwardRef(InputBase)
                                                                              classes={
                                                                                Object {
                                                                                  "adornedEnd": "MuiInputBase-adornedEnd MuiOutlinedInput-adornedEnd",
                                                                                  "adornedStart": "MuiInputBase-adornedStart MuiOutlinedInput-adornedStart",
                                                                                  "disabled": "Mui-disabled Mui-disabled",
                                                                                  "error": "Mui-error Mui-error",
                                                                                  "focused": "Mui-focused Mui-focused",
                                                                                  "formControl": "MuiInputBase-formControl",
                                                                                  "fullWidth": "MuiInputBase-fullWidth",
                                                                                  "input": "MuiInputBase-input MuiOutlinedInput-input",
                                                                                  "inputAdornedEnd": "MuiInputBase-inputAdornedEnd MuiOutlinedInput-inputAdornedEnd",
                                                                                  "inputAdornedStart": "MuiInputBase-inputAdornedStart MuiOutlinedInput-inputAdornedStart",
                                                                                  "inputMarginDense": "MuiInputBase-inputMarginDense MuiOutlinedInput-inputMarginDense",
                                                                                  "inputMultiline": "MuiInputBase-inputMultiline MuiOutlinedInput-inputMultiline",
                                                                                  "inputSelect": "MuiInputBase-inputSelect MuiOutlinedInput-inputSelect",
                                                                                  "inputTypeSearch": "MuiInputBase-inputTypeSearch",
                                                                                  "marginDense": "MuiInputBase-marginDense MuiOutlinedInput-marginDense",
                                                                                  "multiline": "MuiInputBase-multiline MuiOutlinedInput-multiline",
                                                                                  "root": "MuiInputBase-root MuiOutlinedInput-root",
                                                                                }
                                                                              }
                                                                              fullWidth={true}
                                                                              inputComponent="input"
                                                                              multiline={false}
                                                                              name="password"
                                                                              onBlur={[Function]}
                                                                              onChange={[Function]}
                                                                              renderPrefix={[Function]}
                                                                              type="password"
                                                                              value=""
                                                                            >
                                                                              <div
                                                                                className="MuiInputBase-root MuiOutlinedInput-root MuiInputBase-fullWidth MuiInputBase-formControl"
                                                                                onClick={[Function]}
                                                                              >
                                                                                <WithStyles(ForwardRef(NotchedOutline))
                                                                                  className="MuiOutlinedInput-notchedOutline"
                                                                                  labelWidth={0}
                                                                                  notched={false}
                                                                                >
                                                                                  <ForwardRef(NotchedOutline)
                                                                                    className="MuiOutlinedInput-notchedOutline"
                                                                                    classes={
                                                                                      Object {
                                                                                        "legend": "PrivateNotchedOutline-legend-134",
                                                                                        "root": "PrivateNotchedOutline-root-133",
                                                                                      }
                                                                                    }
                                                                                    labelWidth={0}
                                                                                    notched={false}
                                                                                    theme={
                                                                                      Object {
                                                                                        "breakpoints": Object {
                                                                                          "between": [Function],
                                                                                          "down": [Function],
                                                                                          "keys": Array [
                                                                                            "xs",
                                                                                            "sm",
                                                                                            "md",
                                                                                            "lg",
                                                                                            "xl",
                                                                                          ],
                                                                                          "only": [Function],
                                                                                          "up": [Function],
                                                                                          "values": Object {
                                                                                            "lg": 1280,
                                                                                            "md": 960,
                                                                                            "sm": 600,
                                                                                            "xl": 1920,
                                                                                            "xs": 0,
                                                                                          },
                                                                                          "width": [Function],
                                                                                        },
                                                                                        "direction": "ltr",
                                                                                        "mixins": Object {
                                                                                          "gutters": [Function],
                                                                                          "toolbar": Object {
                                                                                            "@media (min-width:0px) and (orientation: landscape)": Object {
                                                                                              "minHeight": 48,
                                                                                            },
                                                                                            "@media (min-width:600px)": Object {
                                                                                              "minHeight": 64,
                                                                                            },
                                                                                            "minHeight": 56,
                                                                                          },
                                                                                        },
                                                                                        "overrides": Object {},
                                                                                        "palette": Object {
                                                                                          "action": Object {
                                                                                            "active": "rgba(0, 0, 0, 0.54)",
                                                                                            "disabled": "rgba(0, 0, 0, 0.26)",
                                                                                            "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                                                                            "hover": "rgba(0, 0, 0, 0.08)",
                                                                                            "hoverOpacity": 0.08,
                                                                                            "selected": "rgba(0, 0, 0, 0.14)",
                                                                                          },
                                                                                          "augmentColor": [Function],
                                                                                          "background": Object {
                                                                                            "default": "#fafafa",
                                                                                            "paper": "#fff",
                                                                                          },
                                                                                          "common": Object {
                                                                                            "black": "#000",
                                                                                            "white": "#fff",
                                                                                          },
                                                                                          "contrastThreshold": 3,
                                                                                          "divider": "rgba(0, 0, 0, 0.12)",
                                                                                          "error": Object {
                                                                                            "contrastText": "#fff",
                                                                                            "dark": "#d32f2f",
                                                                                            "light": "#e57373",
                                                                                            "main": "#f44336",
                                                                                          },
                                                                                          "getContrastText": [Function],
                                                                                          "grey": Object {
                                                                                            "100": "#f5f5f5",
                                                                                            "200": "#eeeeee",
                                                                                            "300": "#e0e0e0",
                                                                                            "400": "#bdbdbd",
                                                                                            "50": "#fafafa",
                                                                                            "500": "#9e9e9e",
                                                                                            "600": "#757575",
                                                                                            "700": "#616161",
                                                                                            "800": "#424242",
                                                                                            "900": "#212121",
                                                                                            "A100": "#d5d5d5",
                                                                                            "A200": "#aaaaaa",
                                                                                            "A400": "#303030",
                                                                                            "A700": "#616161",
                                                                                          },
                                                                                          "primary": Object {
                                                                                            "contrastText": "#fff",
                                                                                            "dark": "#303f9f",
                                                                                            "light": "#7986cb",
                                                                                            "main": "#3f51b5",
                                                                                          },
                                                                                          "secondary": Object {
                                                                                            "contrastText": "#fff",
                                                                                            "dark": "#c51162",
                                                                                            "light": "#ff4081",
                                                                                            "main": "#f50057",
                                                                                          },
                                                                                          "text": Object {
                                                                                            "disabled": "rgba(0, 0, 0, 0.38)",
                                                                                            "hint": "rgba(0, 0, 0, 0.38)",
                                                                                            "primary": "rgba(0, 0, 0, 0.87)",
                                                                                            "secondary": "rgba(0, 0, 0, 0.54)",
                                                                                          },
                                                                                          "tonalOffset": 0.2,
                                                                                          "type": "light",
                                                                                        },
                                                                                        "props": Object {},
                                                                                        "shadows": Array [
                                                                                          "none",
                                                                                          "0px 1px 3px 0px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 2px 1px -1px rgba(0,0,0,0.12)",
                                                                                          "0px 1px 5px 0px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 3px 1px -2px rgba(0,0,0,0.12)",
                                                                                          "0px 1px 8px 0px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 3px 3px -2px rgba(0,0,0,0.12)",
                                                                                          "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                                                                          "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                                                                          "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                                                                          "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                                                                          "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                                                                          "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                                                                          "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                                                                          "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                                                                          "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                                                                          "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                                                                          "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                                                                          "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                                                                          "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                                                                          "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                                                                          "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                                                                          "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                                                                          "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                                                                          "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                                                                          "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                                                                          "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                                                                          "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                                                                        ],
                                                                                        "shape": Object {
                                                                                          "borderRadius": 4,
                                                                                        },
                                                                                        "spacing": [Function],
                                                                                        "transitions": Object {
                                                                                          "create": [Function],
                                                                                          "duration": Object {
                                                                                            "complex": 375,
                                                                                            "enteringScreen": 225,
                                                                                            "leavingScreen": 195,
                                                                                            "short": 250,
                                                                                            "shorter": 200,
                                                                                            "shortest": 150,
                                                                                            "standard": 300,
                                                                                          },
                                                                                          "easing": Object {
                                                                                            "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                                                                            "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                                                                            "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                                                                            "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                                                                          },
                                                                                          "getAutoHeightDuration": [Function],
                                                                                        },
                                                                                        "typography": Object {
                                                                                          "body1": Object {
                                                                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                                            "fontSize": "1rem",
                                                                                            "fontWeight": 400,
                                                                                            "letterSpacing": "0.00938em",
                                                                                            "lineHeight": 1.5,
                                                                                          },
                                                                                          "body2": Object {
                                                                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                                            "fontSize": "0.875rem",
                                                                                            "fontWeight": 400,
                                                                                            "letterSpacing": "0.01071em",
                                                                                            "lineHeight": 1.43,
                                                                                          },
                                                                                          "button": Object {
                                                                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                                            "fontSize": "0.875rem",
                                                                                            "fontWeight": 500,
                                                                                            "letterSpacing": "0.02857em",
                                                                                            "lineHeight": 1.75,
                                                                                            "textTransform": "uppercase",
                                                                                          },
                                                                                          "caption": Object {
                                                                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                                            "fontSize": "0.75rem",
                                                                                            "fontWeight": 400,
                                                                                            "letterSpacing": "0.03333em",
                                                                                            "lineHeight": 1.66,
                                                                                          },
                                                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                                          "fontSize": 14,
                                                                                          "fontWeightBold": 700,
                                                                                          "fontWeightLight": 300,
                                                                                          "fontWeightMedium": 500,
                                                                                          "fontWeightRegular": 400,
                                                                                          "h1": Object {
                                                                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                                            "fontSize": "6rem",
                                                                                            "fontWeight": 300,
                                                                                            "letterSpacing": "-0.01562em",
                                                                                            "lineHeight": 1,
                                                                                          },
                                                                                          "h2": Object {
                                                                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                                            "fontSize": "3.75rem",
                                                                                            "fontWeight": 300,
                                                                                            "letterSpacing": "-0.00833em",
                                                                                            "lineHeight": 1,
                                                                                          },
                                                                                          "h3": Object {
                                                                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                                            "fontSize": "3rem",
                                                                                            "fontWeight": 400,
                                                                                            "letterSpacing": "0em",
                                                                                            "lineHeight": 1.04,
                                                                                          },
                                                                                          "h4": Object {
                                                                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                                            "fontSize": "2.125rem",
                                                                                            "fontWeight": 400,
                                                                                            "letterSpacing": "0.00735em",
                                                                                            "lineHeight": 1.17,
                                                                                          },
                                                                                          "h5": Object {
                                                                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                                            "fontSize": "1.5rem",
                                                                                            "fontWeight": 400,
                                                                                            "letterSpacing": "0em",
                                                                                            "lineHeight": 1.33,
                                                                                          },
                                                                                          "h6": Object {
                                                                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                                            "fontSize": "1.25rem",
                                                                                            "fontWeight": 500,
                                                                                            "letterSpacing": "0.0075em",
                                                                                            "lineHeight": 1.6,
                                                                                          },
                                                                                          "htmlFontSize": 16,
                                                                                          "overline": Object {
                                                                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                                            "fontSize": "0.75rem",
                                                                                            "fontWeight": 400,
                                                                                            "letterSpacing": "0.08333em",
                                                                                            "lineHeight": 2.66,
                                                                                            "textTransform": "uppercase",
                                                                                          },
                                                                                          "pxToRem": [Function],
                                                                                          "round": [Function],
                                                                                          "subtitle1": Object {
                                                                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                                            "fontSize": "1rem",
                                                                                            "fontWeight": 400,
                                                                                            "letterSpacing": "0.00938em",
                                                                                            "lineHeight": 1.75,
                                                                                          },
                                                                                          "subtitle2": Object {
                                                                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                                            "fontSize": "0.875rem",
                                                                                            "fontWeight": 500,
                                                                                            "letterSpacing": "0.00714em",
                                                                                            "lineHeight": 1.57,
                                                                                          },
                                                                                        },
                                                                                        "zIndex": Object {
                                                                                          "appBar": 1100,
                                                                                          "drawer": 1200,
                                                                                          "mobileStepper": 1000,
                                                                                          "modal": 1300,
                                                                                          "snackbar": 1400,
                                                                                          "tooltip": 1500,
                                                                                        },
                                                                                      }
                                                                                    }
                                                                                  >
                                                                                    <fieldset
                                                                                      aria-hidden={true}
                                                                                      className="PrivateNotchedOutline-root-133 MuiOutlinedInput-notchedOutline"
                                                                                      style={
                                                                                        Object {
                                                                                          "paddingLeft": 8,
                                                                                        }
                                                                                      }
                                                                                    >
                                                                                      <legend
                                                                                        className="PrivateNotchedOutline-legend-134"
                                                                                        style={
                                                                                          Object {
                                                                                            "width": 0.01,
                                                                                          }
                                                                                        }
                                                                                      >
                                                                                        <span
                                                                                          dangerouslySetInnerHTML={
                                                                                            Object {
                                                                                              "__html": "&#8203;",
                                                                                            }
                                                                                          }
                                                                                        />
                                                                                      </legend>
                                                                                    </fieldset>
                                                                                  </ForwardRef(NotchedOutline)>
                                                                                </WithStyles(ForwardRef(NotchedOutline))>
                                                                                <input
                                                                                  aria-invalid={false}
                                                                                  className="MuiInputBase-input MuiOutlinedInput-input"
                                                                                  disabled={false}
                                                                                  name="password"
                                                                                  onBlur={[Function]}
                                                                                  onChange={[Function]}
                                                                                  onFocus={[Function]}
                                                                                  required={false}
                                                                                  type="password"
                                                                                  value=""
                                                                                />
                                                                              </div>
                                                                            </ForwardRef(InputBase)>
                                                                          </WithStyles(ForwardRef(InputBase))>
                                                                        </ForwardRef(OutlinedInput)>
                                                                      </WithStyles(ForwardRef(OutlinedInput))>
                                                                    </div>
                                                                  </ForwardRef(FormControl)>
                                                                </WithStyles(ForwardRef(FormControl))>
                                                              </ForwardRef(TextField)>
                                                            </WithStyles(ForwardRef(TextField))>
                                                          </TextField>
                                                        </Field>
                                                      </div>
                                                    </ForwardRef(Grid)>
                                                  </WithStyles(ForwardRef(Grid))>
                                                  <WithStyles(ForwardRef(Grid))
                                                    item={true}
                                                    xs={6}
                                                  >
                                                    <ForwardRef(Grid)
                                                      classes={
                                                        Object {
                                                          "align-content-xs-center": "MuiGrid-align-content-xs-center",
                                                          "align-content-xs-flex-end": "MuiGrid-align-content-xs-flex-end",
                                                          "align-content-xs-flex-start": "MuiGrid-align-content-xs-flex-start",
                                                          "align-content-xs-space-around": "MuiGrid-align-content-xs-space-around",
                                                          "align-content-xs-space-between": "MuiGrid-align-content-xs-space-between",
                                                          "align-items-xs-baseline": "MuiGrid-align-items-xs-baseline",
                                                          "align-items-xs-center": "MuiGrid-align-items-xs-center",
                                                          "align-items-xs-flex-end": "MuiGrid-align-items-xs-flex-end",
                                                          "align-items-xs-flex-start": "MuiGrid-align-items-xs-flex-start",
                                                          "container": "MuiGrid-container",
                                                          "direction-xs-column": "MuiGrid-direction-xs-column",
                                                          "direction-xs-column-reverse": "MuiGrid-direction-xs-column-reverse",
                                                          "direction-xs-row-reverse": "MuiGrid-direction-xs-row-reverse",
                                                          "grid-lg-1": "MuiGrid-grid-lg-1",
                                                          "grid-lg-10": "MuiGrid-grid-lg-10",
                                                          "grid-lg-11": "MuiGrid-grid-lg-11",
                                                          "grid-lg-12": "MuiGrid-grid-lg-12",
                                                          "grid-lg-2": "MuiGrid-grid-lg-2",
                                                          "grid-lg-3": "MuiGrid-grid-lg-3",
                                                          "grid-lg-4": "MuiGrid-grid-lg-4",
                                                          "grid-lg-5": "MuiGrid-grid-lg-5",
                                                          "grid-lg-6": "MuiGrid-grid-lg-6",
                                                          "grid-lg-7": "MuiGrid-grid-lg-7",
                                                          "grid-lg-8": "MuiGrid-grid-lg-8",
                                                          "grid-lg-9": "MuiGrid-grid-lg-9",
                                                          "grid-lg-auto": "MuiGrid-grid-lg-auto",
                                                          "grid-lg-true": "MuiGrid-grid-lg-true",
                                                          "grid-md-1": "MuiGrid-grid-md-1",
                                                          "grid-md-10": "MuiGrid-grid-md-10",
                                                          "grid-md-11": "MuiGrid-grid-md-11",
                                                          "grid-md-12": "MuiGrid-grid-md-12",
                                                          "grid-md-2": "MuiGrid-grid-md-2",
                                                          "grid-md-3": "MuiGrid-grid-md-3",
                                                          "grid-md-4": "MuiGrid-grid-md-4",
                                                          "grid-md-5": "MuiGrid-grid-md-5",
                                                          "grid-md-6": "MuiGrid-grid-md-6",
                                                          "grid-md-7": "MuiGrid-grid-md-7",
                                                          "grid-md-8": "MuiGrid-grid-md-8",
                                                          "grid-md-9": "MuiGrid-grid-md-9",
                                                          "grid-md-auto": "MuiGrid-grid-md-auto",
                                                          "grid-md-true": "MuiGrid-grid-md-true",
                                                          "grid-sm-1": "MuiGrid-grid-sm-1",
                                                          "grid-sm-10": "MuiGrid-grid-sm-10",
                                                          "grid-sm-11": "MuiGrid-grid-sm-11",
                                                          "grid-sm-12": "MuiGrid-grid-sm-12",
                                                          "grid-sm-2": "MuiGrid-grid-sm-2",
                                                          "grid-sm-3": "MuiGrid-grid-sm-3",
                                                          "grid-sm-4": "MuiGrid-grid-sm-4",
                                                          "grid-sm-5": "MuiGrid-grid-sm-5",
                                                          "grid-sm-6": "MuiGrid-grid-sm-6",
                                                          "grid-sm-7": "MuiGrid-grid-sm-7",
                                                          "grid-sm-8": "MuiGrid-grid-sm-8",
                                                          "grid-sm-9": "MuiGrid-grid-sm-9",
                                                          "grid-sm-auto": "MuiGrid-grid-sm-auto",
                                                          "grid-sm-true": "MuiGrid-grid-sm-true",
                                                          "grid-xl-1": "MuiGrid-grid-xl-1",
                                                          "grid-xl-10": "MuiGrid-grid-xl-10",
                                                          "grid-xl-11": "MuiGrid-grid-xl-11",
                                                          "grid-xl-12": "MuiGrid-grid-xl-12",
                                                          "grid-xl-2": "MuiGrid-grid-xl-2",
                                                          "grid-xl-3": "MuiGrid-grid-xl-3",
                                                          "grid-xl-4": "MuiGrid-grid-xl-4",
                                                          "grid-xl-5": "MuiGrid-grid-xl-5",
                                                          "grid-xl-6": "MuiGrid-grid-xl-6",
                                                          "grid-xl-7": "MuiGrid-grid-xl-7",
                                                          "grid-xl-8": "MuiGrid-grid-xl-8",
                                                          "grid-xl-9": "MuiGrid-grid-xl-9",
                                                          "grid-xl-auto": "MuiGrid-grid-xl-auto",
                                                          "grid-xl-true": "MuiGrid-grid-xl-true",
                                                          "grid-xs-1": "MuiGrid-grid-xs-1",
                                                          "grid-xs-10": "MuiGrid-grid-xs-10",
                                                          "grid-xs-11": "MuiGrid-grid-xs-11",
                                                          "grid-xs-12": "MuiGrid-grid-xs-12",
                                                          "grid-xs-2": "MuiGrid-grid-xs-2",
                                                          "grid-xs-3": "MuiGrid-grid-xs-3",
                                                          "grid-xs-4": "MuiGrid-grid-xs-4",
                                                          "grid-xs-5": "MuiGrid-grid-xs-5",
                                                          "grid-xs-6": "MuiGrid-grid-xs-6",
                                                          "grid-xs-7": "MuiGrid-grid-xs-7",
                                                          "grid-xs-8": "MuiGrid-grid-xs-8",
                                                          "grid-xs-9": "MuiGrid-grid-xs-9",
                                                          "grid-xs-auto": "MuiGrid-grid-xs-auto",
                                                          "grid-xs-true": "MuiGrid-grid-xs-true",
                                                          "item": "MuiGrid-item",
                                                          "justify-xs-center": "MuiGrid-justify-xs-center",
                                                          "justify-xs-flex-end": "MuiGrid-justify-xs-flex-end",
                                                          "justify-xs-space-around": "MuiGrid-justify-xs-space-around",
                                                          "justify-xs-space-between": "MuiGrid-justify-xs-space-between",
                                                          "justify-xs-space-evenly": "MuiGrid-justify-xs-space-evenly",
                                                          "root": "MuiGrid-root",
                                                          "spacing-xs-1": "MuiGrid-spacing-xs-1",
                                                          "spacing-xs-10": "MuiGrid-spacing-xs-10",
                                                          "spacing-xs-2": "MuiGrid-spacing-xs-2",
                                                          "spacing-xs-3": "MuiGrid-spacing-xs-3",
                                                          "spacing-xs-4": "MuiGrid-spacing-xs-4",
                                                          "spacing-xs-5": "MuiGrid-spacing-xs-5",
                                                          "spacing-xs-6": "MuiGrid-spacing-xs-6",
                                                          "spacing-xs-7": "MuiGrid-spacing-xs-7",
                                                          "spacing-xs-8": "MuiGrid-spacing-xs-8",
                                                          "spacing-xs-9": "MuiGrid-spacing-xs-9",
                                                          "wrap-xs-nowrap": "MuiGrid-wrap-xs-nowrap",
                                                          "wrap-xs-wrap-reverse": "MuiGrid-wrap-xs-wrap-reverse",
                                                          "zeroMinWidth": "MuiGrid-zeroMinWidth",
                                                        }
                                                      }
                                                      item={true}
                                                      xs={6}
                                                    >
                                                      <div
                                                        className="MuiGrid-root MuiGrid-item MuiGrid-grid-xs-6"
                                                      >
                                                        <Field
                                                          fieldType="text"
                                                          formikProps={
                                                            Object {
                                                              "dirty": false,
                                                              "errors": Object {},
                                                              "handleBlur": [Function],
                                                              "handleChange": [Function],
                                                              "handleReset": [Function],
                                                              "handleSubmit": [Function],
                                                              "initialValues": Object {
                                                                "email": "",
                                                                "password": "",
                                                                "passwordConfirm": "",
                                                                "username": "",
                                                              },
                                                              "isSubmitting": false,
                                                              "isValid": false,
                                                              "isValidating": false,
                                                              "registerField": [Function],
                                                              "resetForm": [Function],
                                                              "setError": [Function],
                                                              "setErrors": [Function],
                                                              "setFieldError": [Function],
                                                              "setFieldTouched": [Function],
                                                              "setFieldValue": [Function],
                                                              "setFormikState": [Function],
                                                              "setStatus": [Function],
                                                              "setSubmitting": [Function],
                                                              "setTouched": [Function],
                                                              "setValues": [Function],
                                                              "status": undefined,
                                                              "submitCount": 0,
                                                              "submitForm": [Function],
                                                              "touched": Object {},
                                                              "unregisterField": [Function],
                                                              "validateField": [Function],
                                                              "validateForm": [Function],
                                                              "validateOnBlur": true,
                                                              "validateOnChange": true,
                                                              "values": Object {
                                                                "email": "",
                                                                "password": "",
                                                                "passwordConfirm": "",
                                                                "username": "",
                                                              },
                                                            }
                                                          }
                                                          fullWidth={true}
                                                          label="Confirm Password"
                                                          name="passwordConfirm"
                                                          type="password"
                                                          variant="outlined"
                                                        >
                                                          <TextField
                                                            errors={Object {}}
                                                            fullWidth={true}
                                                            handleBlur={[Function]}
                                                            handleChange={[Function]}
                                                            label="Confirm Password"
                                                            name="passwordConfirm"
                                                            touched={Object {}}
                                                            type="password"
                                                            values={
                                                              Object {
                                                                "email": "",
                                                                "password": "",
                                                                "passwordConfirm": "",
                                                                "username": "",
                                                              }
                                                            }
                                                            variant="outlined"
                                                          >
                                                            <WithStyles(ForwardRef(TextField))
                                                              error={false}
                                                              fullWidth={true}
                                                              label="Confirm Password"
                                                              name="passwordConfirm"
                                                              onBlur={[Function]}
                                                              onChange={[Function]}
                                                              type="password"
                                                              value=""
                                                              variant="outlined"
                                                            >
                                                              <ForwardRef(TextField)
                                                                classes={
                                                                  Object {
                                                                    "root": "MuiTextField-root",
                                                                  }
                                                                }
                                                                error={false}
                                                                fullWidth={true}
                                                                label="Confirm Password"
                                                                name="passwordConfirm"
                                                                onBlur={[Function]}
                                                                onChange={[Function]}
                                                                type="password"
                                                                value=""
                                                                variant="outlined"
                                                              >
                                                                <WithStyles(ForwardRef(FormControl))
                                                                  className="MuiTextField-root"
                                                                  error={false}
                                                                  fullWidth={true}
                                                                  required={false}
                                                                  variant="outlined"
                                                                >
                                                                  <ForwardRef(FormControl)
                                                                    className="MuiTextField-root"
                                                                    classes={
                                                                      Object {
                                                                        "fullWidth": "MuiFormControl-fullWidth",
                                                                        "marginDense": "MuiFormControl-marginDense",
                                                                        "marginNormal": "MuiFormControl-marginNormal",
                                                                        "root": "MuiFormControl-root",
                                                                      }
                                                                    }
                                                                    error={false}
                                                                    fullWidth={true}
                                                                    required={false}
                                                                    variant="outlined"
                                                                  >
                                                                    <div
                                                                      className="MuiFormControl-root MuiTextField-root MuiFormControl-fullWidth"
                                                                    >
                                                                      <WithStyles(ForwardRef(InputLabel))>
                                                                        <ForwardRef(InputLabel)
                                                                          classes={
                                                                            Object {
                                                                              "animated": "MuiInputLabel-animated",
                                                                              "asterisk": "MuiInputLabel-asterisk",
                                                                              "disabled": "Mui-disabled",
                                                                              "error": "Mui-error",
                                                                              "filled": "MuiInputLabel-filled",
                                                                              "focused": "Mui-focused",
                                                                              "formControl": "MuiInputLabel-formControl",
                                                                              "marginDense": "MuiInputLabel-marginDense",
                                                                              "outlined": "MuiInputLabel-outlined",
                                                                              "required": "Mui-required",
                                                                              "root": "MuiInputLabel-root",
                                                                              "shrink": "MuiInputLabel-shrink",
                                                                            }
                                                                          }
                                                                        >
                                                                          <WithStyles(ForwardRef(FormLabel))
                                                                            className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined"
                                                                            classes={
                                                                              Object {
                                                                                "asterisk": "MuiInputLabel-asterisk",
                                                                                "disabled": "Mui-disabled",
                                                                                "error": "Mui-error",
                                                                                "focused": "Mui-focused",
                                                                                "required": "Mui-required",
                                                                              }
                                                                            }
                                                                            data-shrink={false}
                                                                          >
                                                                            <ForwardRef(FormLabel)
                                                                              className="MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined"
                                                                              classes={
                                                                                Object {
                                                                                  "asterisk": "MuiFormLabel-asterisk MuiInputLabel-asterisk",
                                                                                  "disabled": "Mui-disabled Mui-disabled",
                                                                                  "error": "Mui-error Mui-error",
                                                                                  "filled": "MuiFormLabel-filled",
                                                                                  "focused": "Mui-focused Mui-focused",
                                                                                  "required": "Mui-required Mui-required",
                                                                                  "root": "MuiFormLabel-root",
                                                                                }
                                                                              }
                                                                              data-shrink={false}
                                                                            >
                                                                              <label
                                                                                className="MuiFormLabel-root MuiInputLabel-root MuiInputLabel-formControl MuiInputLabel-animated MuiInputLabel-outlined"
                                                                                data-shrink={false}
                                                                              >
                                                                                Confirm Password
                                                                              </label>
                                                                            </ForwardRef(FormLabel)>
                                                                          </WithStyles(ForwardRef(FormLabel))>
                                                                        </ForwardRef(InputLabel)>
                                                                      </WithStyles(ForwardRef(InputLabel))>
                                                                      <WithStyles(ForwardRef(OutlinedInput))
                                                                        fullWidth={true}
                                                                        labelWidth={0}
                                                                        name="passwordConfirm"
                                                                        onBlur={[Function]}
                                                                        onChange={[Function]}
                                                                        type="password"
                                                                        value=""
                                                                      >
                                                                        <ForwardRef(OutlinedInput)
                                                                          classes={
                                                                            Object {
                                                                              "adornedEnd": "MuiOutlinedInput-adornedEnd",
                                                                              "adornedStart": "MuiOutlinedInput-adornedStart",
                                                                              "disabled": "Mui-disabled",
                                                                              "error": "Mui-error",
                                                                              "focused": "Mui-focused",
                                                                              "input": "MuiOutlinedInput-input",
                                                                              "inputAdornedEnd": "MuiOutlinedInput-inputAdornedEnd",
                                                                              "inputAdornedStart": "MuiOutlinedInput-inputAdornedStart",
                                                                              "inputMarginDense": "MuiOutlinedInput-inputMarginDense",
                                                                              "inputMultiline": "MuiOutlinedInput-inputMultiline",
                                                                              "inputSelect": "MuiOutlinedInput-inputSelect",
                                                                              "marginDense": "MuiOutlinedInput-marginDense",
                                                                              "multiline": "MuiOutlinedInput-multiline",
                                                                              "notchedOutline": "MuiOutlinedInput-notchedOutline",
                                                                              "root": "MuiOutlinedInput-root",
                                                                            }
                                                                          }
                                                                          fullWidth={true}
                                                                          labelWidth={0}
                                                                          name="passwordConfirm"
                                                                          onBlur={[Function]}
                                                                          onChange={[Function]}
                                                                          type="password"
                                                                          value=""
                                                                        >
                                                                          <WithStyles(ForwardRef(InputBase))
                                                                            classes={
                                                                              Object {
                                                                                "adornedEnd": "MuiOutlinedInput-adornedEnd",
                                                                                "adornedStart": "MuiOutlinedInput-adornedStart",
                                                                                "disabled": "Mui-disabled",
                                                                                "error": "Mui-error",
                                                                                "focused": "Mui-focused",
                                                                                "input": "MuiOutlinedInput-input",
                                                                                "inputAdornedEnd": "MuiOutlinedInput-inputAdornedEnd",
                                                                                "inputAdornedStart": "MuiOutlinedInput-inputAdornedStart",
                                                                                "inputMarginDense": "MuiOutlinedInput-inputMarginDense",
                                                                                "inputMultiline": "MuiOutlinedInput-inputMultiline",
                                                                                "inputSelect": "MuiOutlinedInput-inputSelect",
                                                                                "marginDense": "MuiOutlinedInput-marginDense",
                                                                                "multiline": "MuiOutlinedInput-multiline",
                                                                                "notchedOutline": null,
                                                                                "root": "MuiOutlinedInput-root",
                                                                              }
                                                                            }
                                                                            fullWidth={true}
                                                                            inputComponent="input"
                                                                            multiline={false}
                                                                            name="passwordConfirm"
                                                                            onBlur={[Function]}
                                                                            onChange={[Function]}
                                                                            renderPrefix={[Function]}
                                                                            type="password"
                                                                            value=""
                                                                          >
                                                                            <ForwardRef(InputBase)
                                                                              classes={
                                                                                Object {
                                                                                  "adornedEnd": "MuiInputBase-adornedEnd MuiOutlinedInput-adornedEnd",
                                                                                  "adornedStart": "MuiInputBase-adornedStart MuiOutlinedInput-adornedStart",
                                                                                  "disabled": "Mui-disabled Mui-disabled",
                                                                                  "error": "Mui-error Mui-error",
                                                                                  "focused": "Mui-focused Mui-focused",
                                                                                  "formControl": "MuiInputBase-formControl",
                                                                                  "fullWidth": "MuiInputBase-fullWidth",
                                                                                  "input": "MuiInputBase-input MuiOutlinedInput-input",
                                                                                  "inputAdornedEnd": "MuiInputBase-inputAdornedEnd MuiOutlinedInput-inputAdornedEnd",
                                                                                  "inputAdornedStart": "MuiInputBase-inputAdornedStart MuiOutlinedInput-inputAdornedStart",
                                                                                  "inputMarginDense": "MuiInputBase-inputMarginDense MuiOutlinedInput-inputMarginDense",
                                                                                  "inputMultiline": "MuiInputBase-inputMultiline MuiOutlinedInput-inputMultiline",
                                                                                  "inputSelect": "MuiInputBase-inputSelect MuiOutlinedInput-inputSelect",
                                                                                  "inputTypeSearch": "MuiInputBase-inputTypeSearch",
                                                                                  "marginDense": "MuiInputBase-marginDense MuiOutlinedInput-marginDense",
                                                                                  "multiline": "MuiInputBase-multiline MuiOutlinedInput-multiline",
                                                                                  "root": "MuiInputBase-root MuiOutlinedInput-root",
                                                                                }
                                                                              }
                                                                              fullWidth={true}
                                                                              inputComponent="input"
                                                                              multiline={false}
                                                                              name="passwordConfirm"
                                                                              onBlur={[Function]}
                                                                              onChange={[Function]}
                                                                              renderPrefix={[Function]}
                                                                              type="password"
                                                                              value=""
                                                                            >
                                                                              <div
                                                                                className="MuiInputBase-root MuiOutlinedInput-root MuiInputBase-fullWidth MuiInputBase-formControl"
                                                                                onClick={[Function]}
                                                                              >
                                                                                <WithStyles(ForwardRef(NotchedOutline))
                                                                                  className="MuiOutlinedInput-notchedOutline"
                                                                                  labelWidth={0}
                                                                                  notched={false}
                                                                                >
                                                                                  <ForwardRef(NotchedOutline)
                                                                                    className="MuiOutlinedInput-notchedOutline"
                                                                                    classes={
                                                                                      Object {
                                                                                        "legend": "PrivateNotchedOutline-legend-134",
                                                                                        "root": "PrivateNotchedOutline-root-133",
                                                                                      }
                                                                                    }
                                                                                    labelWidth={0}
                                                                                    notched={false}
                                                                                    theme={
                                                                                      Object {
                                                                                        "breakpoints": Object {
                                                                                          "between": [Function],
                                                                                          "down": [Function],
                                                                                          "keys": Array [
                                                                                            "xs",
                                                                                            "sm",
                                                                                            "md",
                                                                                            "lg",
                                                                                            "xl",
                                                                                          ],
                                                                                          "only": [Function],
                                                                                          "up": [Function],
                                                                                          "values": Object {
                                                                                            "lg": 1280,
                                                                                            "md": 960,
                                                                                            "sm": 600,
                                                                                            "xl": 1920,
                                                                                            "xs": 0,
                                                                                          },
                                                                                          "width": [Function],
                                                                                        },
                                                                                        "direction": "ltr",
                                                                                        "mixins": Object {
                                                                                          "gutters": [Function],
                                                                                          "toolbar": Object {
                                                                                            "@media (min-width:0px) and (orientation: landscape)": Object {
                                                                                              "minHeight": 48,
                                                                                            },
                                                                                            "@media (min-width:600px)": Object {
                                                                                              "minHeight": 64,
                                                                                            },
                                                                                            "minHeight": 56,
                                                                                          },
                                                                                        },
                                                                                        "overrides": Object {},
                                                                                        "palette": Object {
                                                                                          "action": Object {
                                                                                            "active": "rgba(0, 0, 0, 0.54)",
                                                                                            "disabled": "rgba(0, 0, 0, 0.26)",
                                                                                            "disabledBackground": "rgba(0, 0, 0, 0.12)",
                                                                                            "hover": "rgba(0, 0, 0, 0.08)",
                                                                                            "hoverOpacity": 0.08,
                                                                                            "selected": "rgba(0, 0, 0, 0.14)",
                                                                                          },
                                                                                          "augmentColor": [Function],
                                                                                          "background": Object {
                                                                                            "default": "#fafafa",
                                                                                            "paper": "#fff",
                                                                                          },
                                                                                          "common": Object {
                                                                                            "black": "#000",
                                                                                            "white": "#fff",
                                                                                          },
                                                                                          "contrastThreshold": 3,
                                                                                          "divider": "rgba(0, 0, 0, 0.12)",
                                                                                          "error": Object {
                                                                                            "contrastText": "#fff",
                                                                                            "dark": "#d32f2f",
                                                                                            "light": "#e57373",
                                                                                            "main": "#f44336",
                                                                                          },
                                                                                          "getContrastText": [Function],
                                                                                          "grey": Object {
                                                                                            "100": "#f5f5f5",
                                                                                            "200": "#eeeeee",
                                                                                            "300": "#e0e0e0",
                                                                                            "400": "#bdbdbd",
                                                                                            "50": "#fafafa",
                                                                                            "500": "#9e9e9e",
                                                                                            "600": "#757575",
                                                                                            "700": "#616161",
                                                                                            "800": "#424242",
                                                                                            "900": "#212121",
                                                                                            "A100": "#d5d5d5",
                                                                                            "A200": "#aaaaaa",
                                                                                            "A400": "#303030",
                                                                                            "A700": "#616161",
                                                                                          },
                                                                                          "primary": Object {
                                                                                            "contrastText": "#fff",
                                                                                            "dark": "#303f9f",
                                                                                            "light": "#7986cb",
                                                                                            "main": "#3f51b5",
                                                                                          },
                                                                                          "secondary": Object {
                                                                                            "contrastText": "#fff",
                                                                                            "dark": "#c51162",
                                                                                            "light": "#ff4081",
                                                                                            "main": "#f50057",
                                                                                          },
                                                                                          "text": Object {
                                                                                            "disabled": "rgba(0, 0, 0, 0.38)",
                                                                                            "hint": "rgba(0, 0, 0, 0.38)",
                                                                                            "primary": "rgba(0, 0, 0, 0.87)",
                                                                                            "secondary": "rgba(0, 0, 0, 0.54)",
                                                                                          },
                                                                                          "tonalOffset": 0.2,
                                                                                          "type": "light",
                                                                                        },
                                                                                        "props": Object {},
                                                                                        "shadows": Array [
                                                                                          "none",
                                                                                          "0px 1px 3px 0px rgba(0,0,0,0.2),0px 1px 1px 0px rgba(0,0,0,0.14),0px 2px 1px -1px rgba(0,0,0,0.12)",
                                                                                          "0px 1px 5px 0px rgba(0,0,0,0.2),0px 2px 2px 0px rgba(0,0,0,0.14),0px 3px 1px -2px rgba(0,0,0,0.12)",
                                                                                          "0px 1px 8px 0px rgba(0,0,0,0.2),0px 3px 4px 0px rgba(0,0,0,0.14),0px 3px 3px -2px rgba(0,0,0,0.12)",
                                                                                          "0px 2px 4px -1px rgba(0,0,0,0.2),0px 4px 5px 0px rgba(0,0,0,0.14),0px 1px 10px 0px rgba(0,0,0,0.12)",
                                                                                          "0px 3px 5px -1px rgba(0,0,0,0.2),0px 5px 8px 0px rgba(0,0,0,0.14),0px 1px 14px 0px rgba(0,0,0,0.12)",
                                                                                          "0px 3px 5px -1px rgba(0,0,0,0.2),0px 6px 10px 0px rgba(0,0,0,0.14),0px 1px 18px 0px rgba(0,0,0,0.12)",
                                                                                          "0px 4px 5px -2px rgba(0,0,0,0.2),0px 7px 10px 1px rgba(0,0,0,0.14),0px 2px 16px 1px rgba(0,0,0,0.12)",
                                                                                          "0px 5px 5px -3px rgba(0,0,0,0.2),0px 8px 10px 1px rgba(0,0,0,0.14),0px 3px 14px 2px rgba(0,0,0,0.12)",
                                                                                          "0px 5px 6px -3px rgba(0,0,0,0.2),0px 9px 12px 1px rgba(0,0,0,0.14),0px 3px 16px 2px rgba(0,0,0,0.12)",
                                                                                          "0px 6px 6px -3px rgba(0,0,0,0.2),0px 10px 14px 1px rgba(0,0,0,0.14),0px 4px 18px 3px rgba(0,0,0,0.12)",
                                                                                          "0px 6px 7px -4px rgba(0,0,0,0.2),0px 11px 15px 1px rgba(0,0,0,0.14),0px 4px 20px 3px rgba(0,0,0,0.12)",
                                                                                          "0px 7px 8px -4px rgba(0,0,0,0.2),0px 12px 17px 2px rgba(0,0,0,0.14),0px 5px 22px 4px rgba(0,0,0,0.12)",
                                                                                          "0px 7px 8px -4px rgba(0,0,0,0.2),0px 13px 19px 2px rgba(0,0,0,0.14),0px 5px 24px 4px rgba(0,0,0,0.12)",
                                                                                          "0px 7px 9px -4px rgba(0,0,0,0.2),0px 14px 21px 2px rgba(0,0,0,0.14),0px 5px 26px 4px rgba(0,0,0,0.12)",
                                                                                          "0px 8px 9px -5px rgba(0,0,0,0.2),0px 15px 22px 2px rgba(0,0,0,0.14),0px 6px 28px 5px rgba(0,0,0,0.12)",
                                                                                          "0px 8px 10px -5px rgba(0,0,0,0.2),0px 16px 24px 2px rgba(0,0,0,0.14),0px 6px 30px 5px rgba(0,0,0,0.12)",
                                                                                          "0px 8px 11px -5px rgba(0,0,0,0.2),0px 17px 26px 2px rgba(0,0,0,0.14),0px 6px 32px 5px rgba(0,0,0,0.12)",
                                                                                          "0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12)",
                                                                                          "0px 9px 12px -6px rgba(0,0,0,0.2),0px 19px 29px 2px rgba(0,0,0,0.14),0px 7px 36px 6px rgba(0,0,0,0.12)",
                                                                                          "0px 10px 13px -6px rgba(0,0,0,0.2),0px 20px 31px 3px rgba(0,0,0,0.14),0px 8px 38px 7px rgba(0,0,0,0.12)",
                                                                                          "0px 10px 13px -6px rgba(0,0,0,0.2),0px 21px 33px 3px rgba(0,0,0,0.14),0px 8px 40px 7px rgba(0,0,0,0.12)",
                                                                                          "0px 10px 14px -6px rgba(0,0,0,0.2),0px 22px 35px 3px rgba(0,0,0,0.14),0px 8px 42px 7px rgba(0,0,0,0.12)",
                                                                                          "0px 11px 14px -7px rgba(0,0,0,0.2),0px 23px 36px 3px rgba(0,0,0,0.14),0px 9px 44px 8px rgba(0,0,0,0.12)",
                                                                                          "0px 11px 15px -7px rgba(0,0,0,0.2),0px 24px 38px 3px rgba(0,0,0,0.14),0px 9px 46px 8px rgba(0,0,0,0.12)",
                                                                                        ],
                                                                                        "shape": Object {
                                                                                          "borderRadius": 4,
                                                                                        },
                                                                                        "spacing": [Function],
                                                                                        "transitions": Object {
                                                                                          "create": [Function],
                                                                                          "duration": Object {
                                                                                            "complex": 375,
                                                                                            "enteringScreen": 225,
                                                                                            "leavingScreen": 195,
                                                                                            "short": 250,
                                                                                            "shorter": 200,
                                                                                            "shortest": 150,
                                                                                            "standard": 300,
                                                                                          },
                                                                                          "easing": Object {
                                                                                            "easeIn": "cubic-bezier(0.4, 0, 1, 1)",
                                                                                            "easeInOut": "cubic-bezier(0.4, 0, 0.2, 1)",
                                                                                            "easeOut": "cubic-bezier(0.0, 0, 0.2, 1)",
                                                                                            "sharp": "cubic-bezier(0.4, 0, 0.6, 1)",
                                                                                          },
                                                                                          "getAutoHeightDuration": [Function],
                                                                                        },
                                                                                        "typography": Object {
                                                                                          "body1": Object {
                                                                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                                            "fontSize": "1rem",
                                                                                            "fontWeight": 400,
                                                                                            "letterSpacing": "0.00938em",
                                                                                            "lineHeight": 1.5,
                                                                                          },
                                                                                          "body2": Object {
                                                                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                                            "fontSize": "0.875rem",
                                                                                            "fontWeight": 400,
                                                                                            "letterSpacing": "0.01071em",
                                                                                            "lineHeight": 1.43,
                                                                                          },
                                                                                          "button": Object {
                                                                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                                            "fontSize": "0.875rem",
                                                                                            "fontWeight": 500,
                                                                                            "letterSpacing": "0.02857em",
                                                                                            "lineHeight": 1.75,
                                                                                            "textTransform": "uppercase",
                                                                                          },
                                                                                          "caption": Object {
                                                                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                                            "fontSize": "0.75rem",
                                                                                            "fontWeight": 400,
                                                                                            "letterSpacing": "0.03333em",
                                                                                            "lineHeight": 1.66,
                                                                                          },
                                                                                          "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                                          "fontSize": 14,
                                                                                          "fontWeightBold": 700,
                                                                                          "fontWeightLight": 300,
                                                                                          "fontWeightMedium": 500,
                                                                                          "fontWeightRegular": 400,
                                                                                          "h1": Object {
                                                                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                                            "fontSize": "6rem",
                                                                                            "fontWeight": 300,
                                                                                            "letterSpacing": "-0.01562em",
                                                                                            "lineHeight": 1,
                                                                                          },
                                                                                          "h2": Object {
                                                                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                                            "fontSize": "3.75rem",
                                                                                            "fontWeight": 300,
                                                                                            "letterSpacing": "-0.00833em",
                                                                                            "lineHeight": 1,
                                                                                          },
                                                                                          "h3": Object {
                                                                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                                            "fontSize": "3rem",
                                                                                            "fontWeight": 400,
                                                                                            "letterSpacing": "0em",
                                                                                            "lineHeight": 1.04,
                                                                                          },
                                                                                          "h4": Object {
                                                                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                                            "fontSize": "2.125rem",
                                                                                            "fontWeight": 400,
                                                                                            "letterSpacing": "0.00735em",
                                                                                            "lineHeight": 1.17,
                                                                                          },
                                                                                          "h5": Object {
                                                                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                                            "fontSize": "1.5rem",
                                                                                            "fontWeight": 400,
                                                                                            "letterSpacing": "0em",
                                                                                            "lineHeight": 1.33,
                                                                                          },
                                                                                          "h6": Object {
                                                                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                                            "fontSize": "1.25rem",
                                                                                            "fontWeight": 500,
                                                                                            "letterSpacing": "0.0075em",
                                                                                            "lineHeight": 1.6,
                                                                                          },
                                                                                          "htmlFontSize": 16,
                                                                                          "overline": Object {
                                                                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                                            "fontSize": "0.75rem",
                                                                                            "fontWeight": 400,
                                                                                            "letterSpacing": "0.08333em",
                                                                                            "lineHeight": 2.66,
                                                                                            "textTransform": "uppercase",
                                                                                          },
                                                                                          "pxToRem": [Function],
                                                                                          "round": [Function],
                                                                                          "subtitle1": Object {
                                                                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                                            "fontSize": "1rem",
                                                                                            "fontWeight": 400,
                                                                                            "letterSpacing": "0.00938em",
                                                                                            "lineHeight": 1.75,
                                                                                          },
                                                                                          "subtitle2": Object {
                                                                                            "fontFamily": "\\"Roboto\\", \\"Helvetica\\", \\"Arial\\", sans-serif",
                                                                                            "fontSize": "0.875rem",
                                                                                            "fontWeight": 500,
                                                                                            "letterSpacing": "0.00714em",
                                                                                            "lineHeight": 1.57,
                                                                                          },
                                                                                        },
                                                                                        "zIndex": Object {
                                                                                          "appBar": 1100,
                                                                                          "drawer": 1200,
                                                                                          "mobileStepper": 1000,
                                                                                          "modal": 1300,
                                                                                          "snackbar": 1400,
                                                                                          "tooltip": 1500,
                                                                                        },
                                                                                      }
                                                                                    }
                                                                                  >
                                                                                    <fieldset
                                                                                      aria-hidden={true}
                                                                                      className="PrivateNotchedOutline-root-133 MuiOutlinedInput-notchedOutline"
                                                                                      style={
                                                                                        Object {
                                                                                          "paddingLeft": 8,
                                                                                        }
                                                                                      }
                                                                                    >
                                                                                      <legend
                                                                                        className="PrivateNotchedOutline-legend-134"
                                                                                        style={
                                                                                          Object {
                                                                                            "width": 0.01,
                                                                                          }
                                                                                        }
                                                                                      >
                                                                                        <span
                                                                                          dangerouslySetInnerHTML={
                                                                                            Object {
                                                                                              "__html": "&#8203;",
                                                                                            }
                                                                                          }
                                                                                        />
                                                                                      </legend>
                                                                                    </fieldset>
                                                                                  </ForwardRef(NotchedOutline)>
                                                                                </WithStyles(ForwardRef(NotchedOutline))>
                                                                                <input
                                                                                  aria-invalid={false}
                                                                                  className="MuiInputBase-input MuiOutlinedInput-input"
                                                                                  disabled={false}
                                                                                  name="passwordConfirm"
                                                                                  onBlur={[Function]}
                                                                                  onChange={[Function]}
                                                                                  onFocus={[Function]}
                                                                                  required={false}
                                                                                  type="password"
                                                                                  value=""
                                                                                />
                                                                              </div>
                                                                            </ForwardRef(InputBase)>
                                                                          </WithStyles(ForwardRef(InputBase))>
                                                                        </ForwardRef(OutlinedInput)>
                                                                      </WithStyles(ForwardRef(OutlinedInput))>
                                                                    </div>
                                                                  </ForwardRef(FormControl)>
                                                                </WithStyles(ForwardRef(FormControl))>
                                                              </ForwardRef(TextField)>
                                                            </WithStyles(ForwardRef(TextField))>
                                                          </TextField>
                                                        </Field>
                                                      </div>
                                                    </ForwardRef(Grid)>
                                                  </WithStyles(ForwardRef(Grid))>
                                                </div>
                                              </ForwardRef(Grid)>
                                            </WithStyles(ForwardRef(Grid))>
                                          </div>
                                        </Styled(MuiBox)>
                                        <WithStyles(ForwardRef(Button))
                                          color="primary"
                                          fullWidth={true}
                                          type="submit"
                                          variant="contained"
                                        >
                                          <ForwardRef(Button)
                                            classes={
                                              Object {
                                                "colorInherit": "MuiButton-colorInherit",
                                                "contained": "MuiButton-contained",
                                                "containedPrimary": "MuiButton-containedPrimary",
                                                "containedSecondary": "MuiButton-containedSecondary",
                                                "disabled": "Mui-disabled",
                                                "focusVisible": "Mui-focusVisible",
                                                "fullWidth": "MuiButton-fullWidth",
                                                "label": "MuiButton-label",
                                                "outlined": "MuiButton-outlined",
                                                "outlinedPrimary": "MuiButton-outlinedPrimary",
                                                "outlinedSecondary": "MuiButton-outlinedSecondary",
                                                "root": "MuiButton-root",
                                                "sizeLarge": "MuiButton-sizeLarge",
                                                "sizeSmall": "MuiButton-sizeSmall",
                                                "text": "MuiButton-text",
                                                "textPrimary": "MuiButton-textPrimary",
                                                "textSecondary": "MuiButton-textSecondary",
                                              }
                                            }
                                            color="primary"
                                            fullWidth={true}
                                            type="submit"
                                            variant="contained"
                                          >
                                            <WithStyles(ForwardRef(ButtonBase))
                                              className="MuiButton-root MuiButton-contained MuiButton-containedPrimary MuiButton-fullWidth"
                                              component="button"
                                              disabled={false}
                                              focusRipple={true}
                                              focusVisibleClassName="Mui-focusVisible"
                                              type="submit"
                                            >
                                              <ForwardRef(ButtonBase)
                                                className="MuiButton-root MuiButton-contained MuiButton-containedPrimary MuiButton-fullWidth"
                                                classes={
                                                  Object {
                                                    "disabled": "Mui-disabled",
                                                    "focusVisible": "Mui-focusVisible",
                                                    "root": "MuiButtonBase-root",
                                                  }
                                                }
                                                component="button"
                                                disabled={false}
                                                focusRipple={true}
                                                focusVisibleClassName="Mui-focusVisible"
                                                type="submit"
                                              >
                                                <button
                                                  className="MuiButtonBase-root MuiButton-root MuiButton-contained MuiButton-containedPrimary MuiButton-fullWidth"
                                                  disabled={false}
                                                  onBlur={[Function]}
                                                  onDragLeave={[Function]}
                                                  onFocus={[Function]}
                                                  onKeyDown={[Function]}
                                                  onKeyUp={[Function]}
                                                  onMouseDown={[Function]}
                                                  onMouseLeave={[Function]}
                                                  onMouseUp={[Function]}
                                                  onTouchEnd={[Function]}
                                                  onTouchMove={[Function]}
                                                  onTouchStart={[Function]}
                                                  tabIndex={0}
                                                  type="submit"
                                                >
                                                  <span
                                                    className="MuiButton-label"
                                                  >
                                                    <WithI18n
                                                      id="Sign up"
                                                    >
                                                      <I18n
                                                        update={true}
                                                        withHash={true}
                                                      >
                                                        <Trans
                                                          id="Sign up"
                                                        >
                                                          <Render
                                                            value="Sign up"
                                                          >
                                                            Sign up
                                                          </Render>
                                                        </Trans>
                                                      </I18n>
                                                    </WithI18n>
                                                  </span>
                                                  <NoSsr>
                                                    <WithStyles(undefined)
                                                      center={false}
                                                    >
                                                      <ForwardRef(TouchRipple)
                                                        center={false}
                                                        classes={
                                                          Object {
                                                            "child": "MuiTouchRipple-child",
                                                            "childLeaving": "MuiTouchRipple-childLeaving",
                                                            "childPulsate": "MuiTouchRipple-childPulsate",
                                                            "ripple": "MuiTouchRipple-ripple",
                                                            "ripplePulsate": "MuiTouchRipple-ripplePulsate",
                                                            "rippleVisible": "MuiTouchRipple-rippleVisible",
                                                            "root": "MuiTouchRipple-root",
                                                          }
                                                        }
                                                      >
                                                        <span
                                                          className="MuiTouchRipple-root"
                                                        >
                                                          <TransitionGroup
                                                            childFactory={[Function]}
                                                            component={null}
                                                            exit={true}
                                                          />
                                                        </span>
                                                      </ForwardRef(TouchRipple)>
                                                    </WithStyles(undefined)>
                                                  </NoSsr>
                                                </button>
                                              </ForwardRef(ButtonBase)>
                                            </WithStyles(ForwardRef(ButtonBase))>
                                          </ForwardRef(Button)>
                                        </WithStyles(ForwardRef(Button))>
                                      </form>
                                    </Component>
                                  </Form>
                                </Formik>
                              </RawRegisterForm>
                            </Connect(RawRegisterForm)>
                          </div>
                        </ForwardRef(CardContent)>
                      </WithStyles(ForwardRef(CardContent))>
                    </div>
                  </ForwardRef(Paper)>
                </WithStyles(ForwardRef(Paper))>
              </ForwardRef(Card)>
            </WithStyles(ForwardRef(Card))>
          </div>
        </ForwardRef(Container)>
      </WithStyles(ForwardRef(Container))>
    </RawRegisterContent>
  </Connect(RawRegisterContent)>
</Provider>
`;

exports[`RegisterContent component should render itself without alert 1`] = `
<WithStyles(ForwardRef(Container))
  maxWidth="sm"
>
  <WithStyles(ForwardRef(Card))
    elevation={2}
  >
    <WithStyles(ForwardRef(CardHeader))
      style={
        Object {
          "textAlign": "center",
        }
      }
      title="Register"
    />
    <WithStyles(ForwardRef(CardContent))>
      <Connect(RawRegisterForm) />
    </WithStyles(ForwardRef(CardContent))>
  </WithStyles(ForwardRef(Card))>
</WithStyles(ForwardRef(Container))>
`;
